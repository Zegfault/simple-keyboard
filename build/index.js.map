{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","../../node_modules/lodash/lodash.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/webpack/buildin/amd-options.js","../../node_modules/events/events.js","../../node_modules/webpack/buildin/global.js","../../node_modules/webpack/buildin/module.js","services/Utilities.js","services/PhysicalKeyboard.js","components/CNSuggestionsData.js","components/CNSuggestions.js","components/Keyboard.js","services/KeyboardLayout.js","index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","string","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","uid","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","id","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","type","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","_typeof","obj","__webpack_amd_options__","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertyNames","NumberIsNaN","Number","EventEmitter","init","emitter","eventListener","errorListener","removeListener","err","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","unshift","warned","w","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","RangeError","setMaxListeners","getMaxListeners","doError","error","er","handler","len","listeners","addListener","on","prependListener","prependOnceListener","list","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","g","window","webpackPolyfill","deprecate","children","Utilities","getOptions","getCaretPosition","getCaretPositionEnd","dispatch","bindMethods","myClass","instance","myMethod","button","buttonTypeClass","buttonWithoutBraces","buttonNormalized","display","mergeDisplay","getDefaultDiplay","caretPos","caretPosEnd","moveCaret","commonParams","output","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","minus","newCaretPos","updateCaretPosAction","setCaretPosition","caretPosition","debug","log","keyboardDOMClass","str","positionEnd","isMaxLengthReached","updateCaretPos","emojiMatchedReg","substr","inputObj","updatedInput","currentInput","inputName","condition","maxLengthReached","Boolean","navigator","maxTouchPoints","PointerEvent","PhysicalKeyboard","event","buttonPressed","getSimpleKeyboardLayoutKey","buttonDOM","getButtonElement","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","removeAttribute","code","a","ai","an","ang","ao","b","ba","bai","ban","bang","bao","be","bei","ben","beng","bi","bia","bian","biao","bie","bin","bing","bo","bu","ca","cai","can","cang","cao","ce","cen","ceng","ch","cha","chai","chan","chang","chao","che","chen","cheng","chi","cho","chon","chong","chou","chu","chua","chuai","chuan","chuang","chui","chun","chuo","ci","co","con","cong","cou","cu","cua","cuan","cui","cun","cuo","da","dai","dan","dang","dao","de","dei","den","deng","di","dia","dian","diao","die","din","ding","diu","do","don","dong","dou","du","dua","duan","dui","dun","duo","ei","en","f","fa","fan","fang","fe","fei","fen","feng","fo","fou","fu","ga","gai","gan","gang","gao","ge","gei","gen","geng","go","gon","gong","gou","gu","gua","guai","guan","guang","gui","gun","guo","h","ha","hai","han","hang","hao","he","hei","hen","heng","ho","hon","hong","hou","hu","hua","huai","huan","huang","hui","hun","huo","j","ji","jia","jian","jiang","jiao","jie","jin","jing","jio","jion","jiong","jiu","ju","jua","juan","jue","jun","k","ka","kai","kan","kang","kao","ke","kei","ken","keng","ko","kon","kong","kou","ku","kua","kuai","kuan","kuang","kui","kun","kuo","la","lai","lan","lang","lao","le","lei","leng","li","lia","lian","liang","liao","lie","lin","ling","liu","lo","lon","long","lou","lu","lua","luan","lun","luo","lü","lüe","ma","mai","man","mang","mao","me","mei","men","meng","mi","mia","mian","miao","mie","ming","miu","mo","mou","mu","na","nai","nan","nang","nao","ne","nei","nen","neng","ng","ni","nia","nian","niang","niao","nie","nin","ning","niu","no","non","nong","nou","nu","nua","nuan","nuo","nü","nüe","ou","pa","pai","pan","pang","pao","pe","pei","pen","peng","pi","pia","pian","piao","pie","pin","ping","po","pou","pu","q","qi","qia","qian","qiang","qiao","qie","qin","qing","qio","qion","qiong","qiu","qu","qua","quan","que","qun","ra","ran","rang","rao","re","ren","reng","ri","ro","ron","rong","rou","ru","rua","ruan","rui","run","ruo","sa","sai","san","sang","sao","se","sen","seng","sh","sha","shai","shan","shang","shao","she","shei","shen","sheng","shi","sho","shou","shu","shua","shuai","shuan","shuang","shui","shun","shuo","si","so","son","song","sou","su","sua","suan","sui","sun","suo","ta","tai","tan","tang","tao","te","ten","teng","ti","tia","tian","tiao","tie","tin","ting","to","ton","tong","tou","tu","tua","tuan","tui","tun","tuo","wa","wai","wan","wang","we","wei","wen","weng","wo","wou","wu","x","xi","xia","xian","xiang","xiao","xie","xin","xing","xio","xion","xiong","xiu","xu","xua","xuan","xue","xun","y","ya","yai","yan","yang","yao","ye","yi","yin","ying","yo","yon","yong","you","yu","yua","yuan","yue","yun","z","za","zai","zan","zang","zao","ze","zei","zen","zeng","zh","zha","zhai","zhan","zhang","zhao","zhe","zhei","zhen","zheng","zhi","zho","zhon","zhong","zhou","zhu","zhua","zhuai","zhuan","zhuang","zhui","zhun","zhuo","zi","zo","zon","zong","zou","zu","zua","zuan","zui","zun","zuo","suggestions","suggestionData","idx","buf","num","getSuggestions","getChar","foundSuggestions","SimpleKeyboard","params","keyboardDOM","document","querySelector","HTMLDivElement","className","caretPositionEnd","initCallback","baseDOMClasses","keyboardClasses","DOMClass","handleParams","currentWord","selectedInput","numberOfSuggestionsPerLine","currentSuggestionPage","numberOfSuggestionsPages","utilities","inputLanguage","layoutName","theme","preventMouseDownDefault","keyboardPluginClasses","buttonElements","currentInstanceName","allKeyboardInstances","keyboardInstanceNames","isFirstKeyboardInstance","physicalKeyboard","render","loadModules","endPosition","onKeyPress","getUpdatedInput","inputPattern","inputPatternIsValid","handleMaxLength","syncInstanceInputs","onChange","onChangeAll","preventDefault","stopMouseDownPropagation","stopPropagation","classList","activeButtonClass","holdInteractionTimeout","holdTimeout","isMouseHold","disableButtonHold","handleButtonHold","preventMouseUpDefault","stopMouseUpPropagation","recurseButtons","buttonElement","onKeyReleased","handleButtonClicked","replaceInput","changedOptions","onSetOptions","newOptions","optionName","JSON","stringify","innerHTML","buttons","classNameItem","buttonTheme","classNameFound","class","buttonThemeArray","filteredButtonArray","item","buttonArr","inputVal","inputPatternRaw","didInputMatch","addEventListener","handleKeyUp","handleKeyDown","handleMouseUp","handleTouchEnd","caretEventHandler","physicalKeyboardHighlight","handleHighlightKeyUp","handleHighlightKeyDown","targetTagName","tagName","isKeyboard","contains","disableCaretPositioning","selectionStart","selectionEnd","buttonName","removeEventListener","onpointerup","ontouchend","ontouchcancel","onmouseup","deleteButton","onpointerdown","onpointercancel","ontouchstart","onclick","onmousedown","initialized","buttonClasses","themeObj","themeObjClasses","buttonAttributes","attrObj","attribute","processAutoTouchEvents","disableContextualWindow","oncontextmenu","autoUseTouchEvents","useTouchEvents","setEventListeners","onInit","isTouchDevice","onTouchDeviceDetected","beforeFirstRender","pointerEventsSupported","useMouseEvents","beforeRender","onRender","onModulesLoaded","KeyboardModule","keyboardModule","classStr","rowDOM","rowIndex","containerStartIndexes","containerEndIndexes","rowDOMArray","from","removedElements","startIndex","arrIndex","endIndex","updated_startIndex","updated_endIndex","containerDOM","createElement","containerUID","setAttribute","containedElements","element","appendChild","pinyin","previewPinyin","setSuggestions","hideSuggestions","setCurrentWord","char","clearInput","setPinyinPreview","toggleLanguage","setOptions","currentLayout","isAlphabetical","expandSuggestionsBtn","suggestionAreaDOM","CNSuggestions","showSuggestions","getCurrentInputMethod","convertInputToKeyboardKey","keydownListener","buttonIsANumberKey","enterSuggestedWord","firstElementChild","charProcessor","readOnly","setInput","handleLangKey","handleShift","handleCNKeyPress","handleBackspace","suggestedWord","getSelectedInput","inputElem","handleSpaceKey","findSuggestions","suggestionsList","updateSuggestionPagesMenu","toggleExpandSuggestionsBtn","suggestion","suggestionElem","nbSuggestionsPages","missingElementsOnLastLine","nthWord","onSuggestedWordClicked","customOnChangeEvent","Event","bubbles","dispatchEvent","page","scroll","changePage","potentialNextPage","scrollToSuggestionPage","updateNumberOfSuggestionPages","suggestionsPagination","previousSuggestionPageBtn","nextSuggestionPageBtn","layoutClass","layout","default","useTouchEventsClass","disableRowButtonContainers","getKeyboardClassString","suggestionsMenu","changeSuggestionsPage","toggleMoreSuggestionsArea","row","rIndex","rowArray","bIndex","buttonHasContainerStart","buttonHasContainerEnd","fctBtnClass","getButtonClass","buttonDisplayName","getButtonDisplayName","buttonType","useButtonTag","getButtonThemeClasses","setDOMButtonAttributes","handleButtonMouseDown","handleButtonMouseUp","buttonUID","buttonSpanDOM","parseRowDOMContainers","handleKeyboardContainerMouseDown"],"mappings":"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CLC,KAAM,2HACNC,IAAK,yGACLC,GACE,uUACFC,IAAK,qHACLC,KAAM,6CACNC,KACE,iOACFC,MAAO,qKACPC,IACE,+SACFC,IAAK,qEACLC,IAAK,2KACLC,EAAG,+DACHC,GACE,quBACFC,IACE,6RACFC,KACE,idACFC,MAAO,qKACPC,KACE,iUACFC,IACE,+VACFC,IACE,iOACFC,KACE,ySACFC,IAAK,mDACLC,KAAM,mDACNC,MAAO,mDACPC,IAAK,6LACLC,GACE,uXACFC,IAAK,+DACLC,KAAM,6IACNC,IACE,6OACFC,IAAK,6IACLC,EAAG,+DACHC,GAAI,+DACJC,IAAK,mGACLC,IAAK,iFACLC,KAAM,2EACNC,IAAK,+DACLC,GACE,uOACFC,IAAK,SACLC,IAAK,+DACLC,KAAM,uCACNC,GAAI,+DACJC,IAAK,mDACLC,KAAM,mDACNC,IAAK,+DACLC,GAAI,6FACJC,IAAK,+DACLC,KAAM,qHACNC,KAAM,+DACNC,MAAO,qHACPC,IAAK,+MACLC,IAAK,mGACLC,IAAK,uCACLr8C,EAAG,+DACHs8C,GAAI,mGACJC,IAAK,mGACLC,IAAK,qKACLC,KAAM,yGACNC,IAAK,mJACLC,GAAI,+DACJC,IAAK,6IACLnR,IAAK,iCACLoR,KAAM,iCACNC,GACE,mhBACFC,IAAK,+DACLC,KAAM,+MACNC,MAAO,2HACPC,KAAM,yJACNC,IAAK,mGACLC,IAAK,yJACLC,KAAM,yMACNC,IAAK,uLACLC,GAAI,+DACJC,IAAK,+DACLC,KAAM,2HACNC,IAAK,+GACLC,GACE,iRACFC,IAAK,+DACLC,KAAM,qEACNC,IAAK,mDACLC,IACE,mPACFC,QAAI,6IACJC,SAAK,2BACL99C,EAAG,+DACH+9C,GAAI,iIACJC,IAAK,qEACLC,IAAK,2HACLC,KAAM,2EACNC,IAAK,qKACLC,GAAI,+DACJC,IAAK,uLACLC,IAAK,+DACLC,KAAM,+JACNC,GAAI,yMACJC,IAAK,+DACLC,KAAM,yGACNC,KAAM,+GACNC,IAAK,6CACLrqC,IAAK,yGACLsqC,KAAM,6FACNC,IAAK,eACLC,GACE,+PACFC,IAAK,uFACLC,GAAI,+JACJ59C,EAAG,+DACH69C,GAAI,uFACJC,IAAK,+DACLC,IAAK,qEACLC,KAAM,iCACNC,IAAK,uFACLC,GAAI,yDACJC,IAAK,2BACLC,IAAK,eACLC,KAAM,SACNC,GAAI,SACJC,GAAI,yJACJC,IAAK,+DACLC,KAAM,yGACNC,MAAO,eACPC,KAAM,mDACNC,IAAK,mGACLC,IAAK,+DACLC,KAAM,iFACNC,IAAK,yDACLC,GAAI,yDACJC,IAAK,mDACLC,KAAM,mDACNC,IAAK,SACLC,GAAI,+DACJC,IAAK,eACLC,KAAM,eACNC,IAAK,2EACLC,QAAI,+DACJC,SAAK,2BACLzgD,EAAG,+DACH0gD,GAAI,6FACJr/C,EAAG,+DACHs/C,GAAI,uFACJC,IAAK,+DACLC,IAAK,mJACLC,KAAM,6FACNC,IAAK,6FACLC,GAAI,+DACJC,IAAK,6IACLC,IAAK,+DACLC,KAAM,2HACNC,GACE,iXACFC,IAAK,+DACLC,KAAM,6FACNC,KAAM,+GACNC,IAAK,iCACLC,IAAK,2EACLC,KAAM,6FACNC,GAAI,mJACJC,IAAK,6CACLC,GAAI,uLACJC,EAAG,+DACHC,GACE,qfACFC,IAAK,+DACLC,KACE,2TACFC,MAAO,+JACPC,KACE,2NACFC,IAAK,iIACLC,IAAK,uLACLC,KAAM,2KACNC,IAAK,+DACLC,KAAM,+DACNC,MAAO,2EACPC,IAAK,6LACLC,GACE,mPACFC,IAAK,+DACLC,KAAM,yJACNC,IAAK,mGACLC,IAAK,uCACL1iD,EAAG,yDACH2iD,GAAI,+DACJC,IAAK,+DACLC,KAAM,6CACNC,IAAK,6CACLC,GAAI,+DACJC,IAAK,6IACLC,KAAM,2BACNC,GAAI,eACJC,GAAI,+DACJC,IAAK,+DACLC,KAAM,mGACNC,IAAK,uCACLC,GAAI,qHACJC,IAAK,iCACLC,KAAM,iCACNC,IAAK,yDACLC,IAAK,eACLC,IAAK,iCACL3iD,EAAG,+DACH4iD,GAAI,+DACJC,IAAK,6CACLC,IAAK,+DACLC,KAAM,uCACNC,IAAK,+DACLC,GAAI,+DACJC,IAAK,eACLC,KAAM,SACNC,GAAI,+DACJC,IAAK,2HACLC,KAAM,2BACNC,KACE,qQACFC,MAAO,iFACPC,KAAM,iIACNC,IAAK,qKACLC,KAAM,SACNC,KAAM,mMACNC,MAAO,yGACPC,IACE,idACFC,IAAK,+DACLC,KAAM,uFACNC,IACE,2TACFC,KAAM,+DACNC,MAAO,6CACPC,MAAO,+DACPC,OAAQ,mDACRC,KAAM,uCACNC,KAAM,iCACNC,KAAM,uFACNC,GACE,2QACFC,GAAI,+DACJC,IAAK,+DACLC,KAAM,yGACNC,IAAK,mGACLC,GAAI,mJACJC,IAAK,2BACLC,KAAM,2BACNC,IAAK,6IACLC,IAAK,yDACLC,IAAK,+GACLhmD,EAAG,+DACHimD,GAAI,6IACJC,IAAK,yGACLC,IAAK,qNACLC,KAAM,qKACNC,IAAK,iIACLC,GAAI,+DACJC,IAAK,iCACLC,KAAM,iCACNC,GAAI,6LACJC,IAAK,+DACLC,KAAM,+JACNC,KAAM,qHACNC,IAAK,mDACLC,IAAK,+DACLC,KAAM,2HACNC,GAAI,+DACJC,IAAK,+DACLC,KAAM,iLACNC,IAAK,uCACLC,GAAI,yGACJC,IAAK,6CACLC,KAAM,6CACNC,IAAK,6CACLC,IAAK,uFACLC,IACE,6OACFxe,EAAG,+DACHye,GAAI,2EACJC,IAAK,iCACLC,IAAK,yMACLC,KAAM,yGACNC,GAAI,+DACJC,IACE,qcACFC,IAAK,+JACLC,KAAM,uCACNC,GAAI,+GACJC,IAAK,SACLC,GACE,6XACFC,EAAG,+DACHC,GACE,ujBACFC,IAAK,qKACLC,KACE,mYACFC,MAAO,mMACPC,KACE,uOACFC,IACE,2TACFC,IAAK,2HACLC,KAAM,mJACNC,IAAK,+DACLC,KAAM,+DACNC,MAAO,+DACPC,IAAK,iIACLC,GACE,qQACFC,IAAK,+DACLC,KAAM,6LACNC,IAAK,uFACLC,IACE,mPACFC,EAAG,+DACHC,GACE,2NACFC,IAAK,SACLC,IACE,6dACFC,KAAM,2KACNC,IACE,uRACFC,GAAI,uLACJC,GACE,iyBACFC,IACE,iRACFC,KACE,qQACFC,GAAI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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleKeyboard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * Utility Service\r\n */\r\nclass Utilities {\r\n  /**\r\n   * Creates an instance of the Utility service\r\n   */\r\n  constructor({ getOptions, getCaretPosition, getCaretPositionEnd, dispatch }) {\r\n    this.getOptions = getOptions;\r\n    this.getCaretPosition = getCaretPosition;\r\n    this.getCaretPositionEnd = getCaretPositionEnd;\r\n    this.dispatch = dispatch;\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    Utilities.bindMethods(Utilities, this);\r\n  }\r\n\r\n  /**\r\n   * Adds default classes to a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @return {string} The classes to be added to the button\r\n   */\r\n  getButtonClass(button) {\r\n    const buttonTypeClass =\r\n      button.includes(\"{\") && button.includes(\"}\") && button !== \"{//}\"\r\n        ? \"functionBtn\"\r\n        : \"standardBtn\";\r\n    const buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\r\n    let buttonNormalized = \"\";\r\n\r\n    if (buttonTypeClass !== \"standardBtn\")\r\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\r\n\r\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\r\n  }\r\n\r\n  /**\r\n   * Default button display labels\r\n   */\r\n  getDefaultDiplay() {\r\n    return {\r\n      \"{bksp}\": \"backspace\",\r\n      \"{backspace}\": \"backspace\",\r\n      \"{enter}\": \"< enter\",\r\n      \"{shift}\": \"shift\",\r\n      \"{shiftleft}\": \"shift\",\r\n      \"{shiftright}\": \"shift\",\r\n      \"{alt}\": \"alt\",\r\n      \"{s}\": \"shift\",\r\n      \"{tab}\": \"tab\",\r\n      \"{lock}\": \"caps\",\r\n      \"{capslock}\": \"caps\",\r\n      \"{accept}\": \"Submit\",\r\n      \"{space}\": \" \",\r\n      \"{//}\": \" \",\r\n      \"{esc}\": \"esc\",\r\n      \"{escape}\": \"esc\",\r\n      \"{f1}\": \"f1\",\r\n      \"{f2}\": \"f2\",\r\n      \"{f3}\": \"f3\",\r\n      \"{f4}\": \"f4\",\r\n      \"{f5}\": \"f5\",\r\n      \"{f6}\": \"f6\",\r\n      \"{f7}\": \"f7\",\r\n      \"{f8}\": \"f8\",\r\n      \"{f9}\": \"f9\",\r\n      \"{f10}\": \"f10\",\r\n      \"{f11}\": \"f11\",\r\n      \"{f12}\": \"f12\",\r\n      \"{numpaddivide}\": \"/\",\r\n      \"{numlock}\": \"lock\",\r\n      \"{arrowup}\": \"↑\",\r\n      \"{arrowleft}\": \"←\",\r\n      \"{arrowdown}\": \"↓\",\r\n      \"{arrowright}\": \"→\",\r\n      \"{prtscr}\": \"print\",\r\n      \"{scrolllock}\": \"scroll\",\r\n      \"{pause}\": \"pause\",\r\n      \"{insert}\": \"ins\",\r\n      \"{home}\": \"home\",\r\n      \"{pageup}\": \"up\",\r\n      \"{delete}\": \"del\",\r\n      \"{end}\": \"end\",\r\n      \"{pagedown}\": \"down\",\r\n      \"{numpadmultiply}\": \"*\",\r\n      \"{numpadsubtract}\": \"-\",\r\n      \"{numpadadd}\": \"+\",\r\n      \"{numpadenter}\": \"enter\",\r\n      \"{period}\": \".\",\r\n      \"{numpaddecimal}\": \".\",\r\n      \"{numpad0}\": \"0\",\r\n      \"{numpad1}\": \"1\",\r\n      \"{numpad2}\": \"2\",\r\n      \"{numpad3}\": \"3\",\r\n      \"{numpad4}\": \"4\",\r\n      \"{numpad5}\": \"5\",\r\n      \"{numpad6}\": \"6\",\r\n      \"{numpad7}\": \"7\",\r\n      \"{numpad8}\": \"8\",\r\n      \"{numpad9}\": \"9\"\r\n    };\r\n  }\r\n  /**\r\n   * Returns the display (label) name for a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @param  {object} display The provided display option\r\n   * @param  {boolean} mergeDisplay Whether the provided param value should be merged with the default one.\r\n   */\r\n  getButtonDisplayName(button, display, mergeDisplay) {\r\n    if (mergeDisplay) {\r\n      display = Object.assign({}, this.getDefaultDiplay(), display);\r\n    } else {\r\n      display = display || this.getDefaultDiplay();\r\n    }\r\n\r\n    return display[button] || button;\r\n  }\r\n\r\n  /**\r\n   * Returns the updated input resulting from clicking a given button\r\n   *\r\n   * @param  {string} button The button's layout name\r\n   * @param  {string} input The input string\r\n   * @param  {number} caretPos The cursor's current position\r\n   * @param  {number} caretPosEnd The cursor's current end position\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  getUpdatedInput(\r\n    button,\r\n    input,\r\n    caretPos,\r\n    caretPosEnd = caretPos,\r\n    moveCaret = false\r\n  ) {\r\n    const options = this.getOptions();\r\n    const commonParams = [caretPos, caretPosEnd, moveCaret];\r\n\r\n    let output = input;\r\n\r\n    if (\r\n      (button === \"{bksp}\" || button === \"{backspace}\") &&\r\n      output.length > 0\r\n    ) {\r\n      output = this.removeAt(output, ...commonParams);\r\n    } else if (button === \"{space}\")\r\n      output = this.addStringAt(output, \" \", ...commonParams);\r\n    else if (\r\n      button === \"{tab}\" &&\r\n      !(\r\n        typeof options.tabCharOnTab === \"boolean\" &&\r\n        options.tabCharOnTab === false\r\n      )\r\n    ) {\r\n      output = this.addStringAt(output, \"\\t\", ...commonParams);\r\n    } else if (\r\n      (button === \"{enter}\" || button === \"{numpadenter}\") &&\r\n      options.newLineOnEnter\r\n    )\r\n      output = this.addStringAt(output, \"\\n\", ...commonParams);\r\n    else if (\r\n      button.includes(\"numpad\") &&\r\n      Number.isInteger(Number(button[button.length - 2]))\r\n    ) {\r\n      output = this.addStringAt(\r\n        output,\r\n        button[button.length - 2],\r\n        ...commonParams\r\n      );\r\n    } else if (button === \"{numpaddivide}\")\r\n      output = this.addStringAt(output, \"/\", ...commonParams);\r\n    else if (button === \"{numpadmultiply}\")\r\n      output = this.addStringAt(output, \"*\", ...commonParams);\r\n    else if (button === \"{numpadsubtract}\")\r\n      output = this.addStringAt(output, \"-\", ...commonParams);\r\n    else if (button === \"{numpadadd}\")\r\n      output = this.addStringAt(output, \"+\", ...commonParams);\r\n    else if (button === \"{numpaddecimal}\")\r\n      output = this.addStringAt(output, \".\", ...commonParams);\r\n    else if (button === \"{\" || button === \"}\")\r\n      output = this.addStringAt(output, button, ...commonParams);\r\n    else if (!button.includes(\"{\") && !button.includes(\"}\"))\r\n      output = this.addStringAt(output, button, ...commonParams);\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Moves the cursor position by a given amount\r\n   *\r\n   * @param  {number} length Represents by how many characters the input should be moved\r\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\r\n   */\r\n  updateCaretPos(length, minus) {\r\n    const newCaretPos = this.updateCaretPosAction(length, minus);\r\n\r\n    this.dispatch(instance => {\r\n      instance.setCaretPosition(newCaretPos);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Action method of updateCaretPos\r\n   *\r\n   * @param  {number} length Represents by how many characters the input should be moved\r\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\r\n   */\r\n  updateCaretPosAction(length, minus) {\r\n    const options = this.getOptions();\r\n    let caretPosition = this.getCaretPosition();\r\n\r\n    if (minus) {\r\n      if (caretPosition > 0) caretPosition = caretPosition - length;\r\n    } else {\r\n      caretPosition = caretPosition + length;\r\n    }\r\n\r\n    if (options.debug) {\r\n      console.log(\"Caret at:\", caretPosition, `(${this.keyboardDOMClass})`);\r\n    }\r\n\r\n    return caretPosition;\r\n  }\r\n\r\n  /**\r\n   * Adds a string to the input at a given position\r\n   *\r\n   * @param  {string} source The source input\r\n   * @param  {string} str The string to add\r\n   * @param  {number} position The (cursor) position where the string should be added\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  addStringAt(\r\n    source,\r\n    str,\r\n    position = source.length,\r\n    positionEnd = source.length,\r\n    moveCaret = false\r\n  ) {\r\n    let output;\r\n\r\n    if (!position && position !== 0) {\r\n      output = source + str;\r\n    } else {\r\n      output = [source.slice(0, position), str, source.slice(positionEnd)].join(\r\n        \"\"\r\n      );\r\n\r\n      /**\r\n       * Avoid caret position change when maxLength is set\r\n       */\r\n      if (!this.isMaxLengthReached()) {\r\n        if (moveCaret) this.updateCaretPos(str.length);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Removes an amount of characters at a given position\r\n   *\r\n   * @param  {string} source The source input\r\n   * @param  {number} position The (cursor) position from where the characters should be removed\r\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\r\n   */\r\n  removeAt(\r\n    source,\r\n    position = source.length,\r\n    positionEnd = source.length,\r\n    moveCaret = false\r\n  ) {\r\n    if (position === 0 && positionEnd === 0) {\r\n      return source;\r\n    }\r\n\r\n    let output;\r\n\r\n    if (position === positionEnd) {\r\n      let prevTwoChars;\r\n      let emojiMatched;\r\n      const emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\r\n\r\n      /**\r\n       * Emojis are made out of two characters, so we must take a custom approach to trim them.\r\n       * For more info: https://mathiasbynens.be/notes/javascript-unicode\r\n       */\r\n      if (position && position >= 0) {\r\n        prevTwoChars = source.substring(position - 2, position);\r\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\r\n\r\n        if (emojiMatched) {\r\n          output = source.substr(0, position - 2) + source.substr(position);\r\n          if (moveCaret) this.updateCaretPos(2, true);\r\n        } else {\r\n          output = source.substr(0, position - 1) + source.substr(position);\r\n          if (moveCaret) this.updateCaretPos(1, true);\r\n        }\r\n      } else {\r\n        prevTwoChars = source.slice(-2);\r\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\r\n\r\n        if (emojiMatched) {\r\n          output = source.slice(0, -2);\r\n          if (moveCaret) this.updateCaretPos(2, true);\r\n        } else {\r\n          output = source.slice(0, -1);\r\n          if (moveCaret) this.updateCaretPos(1, true);\r\n        }\r\n      }\r\n    } else {\r\n      output = source.slice(0, position) + source.slice(positionEnd);\r\n      if (moveCaret) {\r\n        this.dispatch(instance => {\r\n          instance.setCaretPosition(position);\r\n        });\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n  /**\r\n   * Determines whether the maxLength has been reached. This function is called when the maxLength option it set.\r\n   *\r\n   * @param  {object} inputObj\r\n   * @param  {string} updatedInput\r\n   */\r\n  handleMaxLength(inputObj, updatedInput) {\r\n    const options = this.getOptions();\r\n    const maxLength = options.maxLength;\r\n    const currentInput = inputObj[options.inputName];\r\n    const condition = updatedInput.length - 1 >= maxLength;\r\n\r\n    if (\r\n      /**\r\n       * If pressing this button won't add more characters\r\n       * We exit out of this limiter function\r\n       */\r\n      updatedInput.length <= currentInput.length\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (Number.isInteger(maxLength)) {\r\n      if (options.debug) {\r\n        console.log(\"maxLength (num) reached:\", condition);\r\n      }\r\n\r\n      if (condition) {\r\n        /**\r\n         * @type {boolean} Boolean value that shows whether maxLength has been reached\r\n         */\r\n        this.maxLengthReached = true;\r\n        return true;\r\n      } else {\r\n        this.maxLengthReached = false;\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (typeof maxLength === \"object\") {\r\n      const condition = currentInput.length === maxLength[options.inputName];\r\n\r\n      if (options.debug) {\r\n        console.log(\"maxLength (obj) reached:\", condition);\r\n      }\r\n\r\n      if (condition) {\r\n        this.maxLengthReached = true;\r\n        return true;\r\n      } else {\r\n        this.maxLengthReached = false;\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current value of maxLengthReached\r\n   */\r\n  isMaxLengthReached() {\r\n    return Boolean(this.maxLengthReached);\r\n  }\r\n\r\n  /**\r\n   * Determines whether a touch device is being used\r\n   */\r\n  isTouchDevice() {\r\n    return \"ontouchstart\" in window || navigator.maxTouchPoints;\r\n  }\r\n\r\n  /**\r\n   * Determines whether pointer events are supported\r\n   */\r\n  pointerEventsSupported() {\r\n    return window.PointerEvent;\r\n  }\r\n\r\n  /**\r\n   * Bind all methods in a given class\r\n   */\r\n\r\n  static bindMethods(myClass, instance) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const myMethod of Object.getOwnPropertyNames(myClass.prototype)) {\r\n      const excludeMethod =\r\n        myMethod === \"constructor\" || myMethod === \"bindMethods\";\r\n      if (!excludeMethod) {\r\n        instance[myMethod] = instance[myMethod].bind(instance);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transforms an arbitrary string to camelCase\r\n   *\r\n   * @param  {string} str The string to transform.\r\n   */\r\n  camelCase(str) {\r\n    if (!str) return false;\r\n\r\n    return str\r\n      .toLowerCase()\r\n      .trim()\r\n      .split(/[.\\-_\\s]/g)\r\n      .reduce((str, word) =>\r\n        word.length ? str + word[0].toUpperCase() + word.slice(1) : str\r\n      );\r\n  }\r\n}\r\n\r\nexport default Utilities;\r\n","import Utilities from \"../services/Utilities\";\r\n\r\n/**\r\n * Physical Keyboard Service\r\n */\r\nclass PhysicalKeyboard {\r\n  /**\r\n   * Creates an instance of the PhysicalKeyboard service\r\n   */\r\n  constructor({ dispatch, getOptions }) {\r\n    /**\r\n     * @type {object} A simple-keyboard instance\r\n     */\r\n    this.dispatch = dispatch;\r\n    this.getOptions = getOptions;\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    Utilities.bindMethods(PhysicalKeyboard, this);\r\n  }\r\n\r\n  handleHighlightKeyDown(event) {\r\n    const options = this.getOptions();\r\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\r\n\r\n    this.dispatch(instance => {\r\n      const buttonDOM =\r\n        instance.getButtonElement(buttonPressed) ||\r\n        instance.getButtonElement(`{${buttonPressed}}`);\r\n\r\n      if (buttonDOM) {\r\n        buttonDOM.style.backgroundColor =\r\n          options.physicalKeyboardHighlightBgColor || \"#dadce4\";\r\n        buttonDOM.style.color =\r\n          options.physicalKeyboardHighlightTextColor || \"black\";\r\n      }\r\n    });\r\n  }\r\n\r\n  handleHighlightKeyUp(event) {\r\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\r\n\r\n    this.dispatch(instance => {\r\n      const buttonDOM =\r\n        instance.getButtonElement(buttonPressed) ||\r\n        instance.getButtonElement(`{${buttonPressed}}`);\r\n\r\n      if (buttonDOM && buttonDOM.removeAttribute) {\r\n        buttonDOM.removeAttribute(\"style\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Transforms a KeyboardEvent's \"key.code\" string into a simple-keyboard layout format\r\n   * @param  {object} event The KeyboardEvent\r\n   */\r\n  getSimpleKeyboardLayoutKey(event) {\r\n    let output;\r\n\r\n    if (\r\n      event.code.includes(\"Numpad\") ||\r\n      event.code.includes(\"Shift\") ||\r\n      event.code.includes(\"Space\") ||\r\n      event.code.includes(\"Backspace\") ||\r\n      event.code.includes(\"Control\") ||\r\n      event.code.includes(\"Alt\") ||\r\n      event.code.includes(\"Meta\")\r\n    ) {\r\n      output = event.code;\r\n    } else {\r\n      output = event.key;\r\n    }\r\n\r\n    /**\r\n     * If button is not uppercase, casting to lowercase\r\n     */\r\n    if (\r\n      output !== output.toUpperCase() ||\r\n      (event.code[0] === \"F\" &&\r\n        Number.isInteger(Number(event.code[1])) &&\r\n        event.code.length <= 3)\r\n    ) {\r\n      output = output.toLowerCase();\r\n    }\r\n\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default PhysicalKeyboard;\r\n","export default {\r\n  a: \"阿啊吖嗄锕安爱暗案按\",\r\n  ai: \"爱呆挨哀埃碍艾唉矮哎癌嗌嗳嗳嫒捱暧瑷皑砹硙蔼诶锿隘霭\",\r\n  an: \"安暗案按岸俺埯庵揞桉氨犴胺腌谙铵鞍鹌黯\",\r\n  ang: \"昂盎腌\",\r\n  ao: \"奥澳傲熬凹嗷坳媪岙廒懊拗敖燠獒翱聱螯袄遨鏊鏖骜鳌\",\r\n  b: \"不本把部便被北并别比\",\r\n  ba: \"把八吧巴伯罢爸拔霸坝叭扒岜捌杷湃灞疤笆粑耙芭茇菝萆跋钯钹靶魃鲃鲅鲌\",\r\n  bai: \"白百伯败拜摆柏佰呗捭掰稗薜鞴䙓\",\r\n  ban: \"反办半版般班板伴搬扮斑颁坂扳拌瓣瘢癍绊舨钣阪\",\r\n  bang: \"帮旁邦棒膀绑傍榜梆氆浜磅蒡蚌螃谤镑\",\r\n  bao: \"报保包宝抱暴炮薄爆胞饱剥堡鲍刨孢掊煲脬苞苴葆裒褒褓褴豹趵铇雹鸨\",\r\n  be: \"本被北备背奔悲辈杯臂\",\r\n  bei: \"被北备背悲辈杯臂贝倍碑卑呗埤孛庳悖惫焙狈碚萆蓓蜚褙跋邶鐾钡陂鞴鹎\",\r\n  ben: \"本奔笨坌夯畚苯贲锛唪\",\r\n  beng: \"唪嘣堋崩抨泵甏甭绷绷蚌蹦迸镚\",\r\n  bi:\r\n    \"比必笔毕秘避臂币壁闭逼鼻彼碧辟拂毙鄙蔽弊俾匕吡哔埤妣婢嬖庇庳弼愎敝枇檗殍毖泌滗濞狴璧畀痹睥瞥秕筚箅篦纰舭芘荜荸菝萆蓖薜蘖蚍裨襞诐贲赑跛跸鐾铋陂陛陴馥髀鲾\",\r\n  bia: \"便表边变编标遍彪辩鞭\",\r\n  bian: \"便边变编遍辩鞭辨辫扁匾卞弁忭汴煸砭碥稹窆笾缏苄蝙褊贬鳊\",\r\n  biao: \"表标彪镖剽婊嫖杓灬焱瘭膘苞裱鏖镳飑飙飚骉骠髟鳔\",\r\n  bie: \"别憋瘪蹩鳖\",\r\n  bin: \"宾彬滨斌傧摈殡浜濒玢禀缤膑豳镔髌鬓\",\r\n  bing: \"并兵病冰柄屏饼丙冫廪摒枋槟炳燹禀秉迸邴\",\r\n  bo:\r\n    \"白百般波伯博播薄勃拨柏剥玻脖泊卜驳搏魄亳佰啵孛帛悖擘檗泺渤溥礴箔簸簿膊舶艴荸菔菠蕃薜蘖袯趵跛踣钵钹铂镈雹饽馎鲅鲌鹁\",\r\n  bu: \"不部步布补捕堡怖卜卟卩哺埔埠惚晡溥瓿簿逋醭钚钸鞴\",\r\n  c: \"出成从长此重次产处才\",\r\n  ca: \"擦拆嚓礤才参采藏草菜\",\r\n  cai: \"才采菜财材彩裁猜蔡踩睬䌽\",\r\n  can: \"参残餐惨灿孱惭掺昝璨粲蚕骖黪\",\r\n  cang: \"藏苍仓舱伧沧臧鸧\",\r\n  cao: \"草操曹嘈屮槽漕澡糙艚螬\",\r\n  ce: \"策测侧册厕恻栅赦䇲曾\",\r\n  cen: \"参岑涔曾层噌缯蹭\",\r\n  ceng: \"曾层噌缯蹭\",\r\n  ch: \"出成长重产处场车常吃\",\r\n  cha: \"查差察茶插刹叉吒咤喳姹岔搋搽杈楂槎檫汊痄碴苴茬荼衩诧锸镲馇\",\r\n  chai: \"差柴拆侪瘥茈虿豺钗\",\r\n  chan: \"产单颤禅缠阐冁刬啴婵孱廛忏掸掺搀浐潺澶羼苫蒇蝉蟾觇谄谗躔铲镵馋骣\",\r\n  chang: \"长场常厂唱尝偿昌畅肠倡敞伥娼嫦徜怅惝昶氅猖玚苌菖裳锠阊鬯鲳鲿\",\r\n  chao: \"朝超潮吵抄炒嘲绰剿巢怊晁焯耖钞\",\r\n  che: \"车彻尺撤扯坼屮掣澈砗辙\",\r\n  chen: \"称陈沉晨尘沈臣辰趁衬琛嗔宸忱抻榇橙湛疹眈碜秤肜胂谌谶郴龀\",\r\n  cheng:\r\n    \"成城程称承枪乘盛诚撑呈惩澄丞伧噌埕塍晟枨柽樘橙浈瞠秤蛏裎赪逞郢酲铖铛骋\",\r\n  chi:\r\n    \"吃持迟赤尺池驰耻痴齿斥嗤匙侈傺叱哆哧啻坻墀媸弛彳搋敕沱炽瘛眙眵笞篪翅胝芪茌茬蚩螭褫豉踅踟郗饬魑䗖\",\r\n  cho: \"重冲充抽仇崇愁丑臭筹\",\r\n  chon: \"重冲充崇虫宠忡憧潼盅\",\r\n  chong: \"重冲充崇虫宠忡憧潼盅舂艟茧茺酮铳\",\r\n  chou: \"抽仇愁丑臭筹酬绸瞅俦帱惆搐焘畴瘳稠踌雠䌷\",\r\n  chu: \"出处初除楚础触储厨畜亍刍怵憷搐杵楮樗橱滁矗硫絮绌蜍褚蹰锄雏黜\",\r\n  chua: \"传创穿船窗床川串闯喘\",\r\n  chuai: \"嘬揣揣搋踹蹉\",\r\n  chuan: \"传穿船川串喘巛椽氚舛舡遄钏\",\r\n  chuang: \"创窗床闯幢囱怆疮舂\",\r\n  chui: \"吹垂锤捶棰椎槌炊陲\",\r\n  chun: \"春纯唇淳蠢椿沌肫莼醇鹑䞐\",\r\n  chuo: \"绰啜戳淖焯簇缀荃蔟踔踱躇辍醛龊\",\r\n  ci: \"此次差刺词辞慈赐磁瓷兹伺嵯恣疵祠粢糍茈茨蚝螅訾趑雌鹚\",\r\n  co: \"从匆聪丛凑葱囱揍枞楱\",\r\n  con: \"从匆聪丛葱囱枞淙琮璁\",\r\n  cong: \"从匆聪丛葱囱枞淙琮璁苁骢\",\r\n  cou: \"凑揍楱簇腠蔟辏\",\r\n  cu: \"促粗醋卒徂槭殂猝簇蔟蹙蹴酢\",\r\n  cua: \"窜撺汆爨篡蹿镩\",\r\n  cuan: \"窜撺汆爨篡蹿镩\",\r\n  cui: \"脆翠崔衰催粹摧啐悴榱橇毳淬璀瘁缞萃隹\",\r\n  cun: \"存村寸忖浚皴\",\r\n  cuo: \"错差措挫厝嵯搓撮痤瘥矬磋脞蹉锉鹾\",\r\n  d: \"的大到地道得对多都当\",\r\n  da: \"大打达答塔搭哒妲怛沓疸瘩瘩笪耷荙褡跶酂靼鞑\",\r\n  dai: \"大代带待呆袋戴贷逮歹傣呔埭岱怠棣殆玳甙绐轪迨逯黛\",\r\n  dan: \"但单石担弹丹淡胆旦蛋诞儋啖惮掸檐殚氮湛澶澹疸瘅瘅眈箪耽聃膻萏蜒詹赡郸钽\",\r\n  dang: \"当党荡挡档凼垱宕玚珰砀筜菪裆谠铛\",\r\n  dao: \"到道倒导刀岛盗稻蹈悼捣叨刂帱忉梼氘洮祷纛鱽\",\r\n  de: \"的地得德锝陟等登邓\",\r\n  dei: \"得\",\r\n  den: \"等登邓灯瞪凳澄噔嶝戥\",\r\n  deng: \"等登邓灯瞪凳澄噔嶝戥橙眙磴簦蹬镫\",\r\n  di:\r\n    \"的地第提弟底低敌帝适抵递滴狄迪蒂堤笛嘀坻娣嫡柢棣氐涤睇砥碲籴缔羝翟胝芍荻莜觌诋谛蹄轪邸镝骶䗖\",\r\n  dia: \"嗲点电调店掉典鸟雕殿\",\r\n  dian: \"点电店典殿颠淀甸奠佃坫垫巅惦拈掂涎滇玷癜癫碘簟蜓踮钿阽靛\",\r\n  diao: \"调掉鸟雕钓吊凋刁叼碉稠窎莜蜩貂踔钌铞鲷\",\r\n  die: \"爹跌叠蝶碟佚喋垤堞揲渫牒瓞窒绖耋褶谍蹀轶迭鲽鳎\",\r\n  din: \"定顶订丁钉盯鼎叮仃啶\",\r\n  ding: \"定顶订丁钉盯鼎叮仃啶汀玎町疔碇耵腚葶酊锭饤\",\r\n  diu: \"丢铥\",\r\n  do: \"都动东读斗洞懂冬豆抖\",\r\n  don: \"动东洞懂冬董冻栋侗咚\",\r\n  dong: \"动东洞懂冬董冻栋侗咚垌岽峒恫氡甬硐胨胴酮鸫\",\r\n  dou: \"都读斗豆抖兜逗陡渎痘窦窬篼蔸蚪逾饾\",\r\n  du: \"都度读独毒督肚渡杜赌堵睹嘟妒椟橐渎牍犊碡竺笃纛芏蠹镀阇髑黩㱩\",\r\n  dua: \"段断端短锻椴煅簖缎踹\",\r\n  duan: \"段断端短锻椴煅簖缎踹\",\r\n  dui: \"对队堆敦兑怼憝槌碓镦\",\r\n  dun: \"顿盾吨敦蹲囤墩沌炖盹砘礅豚趸遁钝\",\r\n  duo: \"多度夺躲朵舵堕亸剁咄哆哚垛惰掇柁棰沱沲缍裰跺踱铎锗隋饳驮\",\r\n  e:\r\n    \"阿恶额俄饿哦鹅厄呃噩垩娥婀屙峨愕扼猗硪胺腭苊莪萼蛤蛾讹谔轭遏邑鄂钶锷阏隘颚鳄鹗\",\r\n  ei: \"哎诶诶\",\r\n  en: \"恩摁蒽\",\r\n  er: \"而二儿尔耳佴洱濡珥贰迩铒饵鲕鸸䌺\",\r\n  f: \"发方分法反放风服非夫\",\r\n  fa: \"发法乏罚伐垡珐砝筏阀\",\r\n  fan: \"反饭翻犯范凡番烦繁返泛贩帆幡梵樊燔畈矾蕃藩蘩蟠袢蹯钒\",\r\n  fang: \"方放房访防仿芳妨坊纺匚彷枋肪舫邡邡钫鲂鳑\",\r\n  fe: \"分风非飞费份封纷峰丰\",\r\n  fei: \"非飞费斐废菲肥匪啡肺沸吠妃悱扉榧淝狒痱痱砩祓篚绯翡腓芾蜚裴诽贲镄霏鲱\",\r\n  fen: \"分份纷奋愤粉芬吩氛坟粪焚偾忿棼棼汾瀵燔玢豮贲酚鲼鼢\",\r\n  feng: \"风封峰丰锋凤奉枫疯逢缝冯蜂讽俸唪沣烽砜葑蚌赗逄酆\",\r\n  fo: \"佛否缶\",\r\n  fou: \"否缶\",\r\n  fu:\r\n    \"服夫父府复福副负妇富佛付附幅伏扶赴浮符腐腹咐抚覆傅弗肤芙俯拂俘赋甫缚辅敷凫匐呋呒孚孵宓幞怫拊掊斧桴氟涪溥滏砩祓稃绂绋罘脯腑艴芾苻茯莆莩菔蚨蜉蝠蝮袱讣赙趺跗辐郛釜阜阝鞴韨馥驸鲋鳆麸黻黼\",\r\n  g: \"国个过公高工给间关感\",\r\n  ga: \"界夹咖胳嘎噶尕尜尬旮轧钆骱\",\r\n  gai: \"该改概盖丐垓戤溉胲芥赅钙阂陔骸\",\r\n  gan: \"间感干敢赶甘乾杆肝坩尴擀旰柑橄泔淦澉疳矸秆竿竿绀苷赣酐鳡\",\r\n  gang: \"港刚钢岗纲缸冈扛亢戆杠筻罡肛肮舡颃\",\r\n  gao: \"高告稿搞糕膏咎杲桕槁槔皋睾篙缟羔蒿藁诰郜锆镐\",\r\n  ge:\r\n    \"个合各革格哥歌隔割阁葛戈搁胳仡咯哿嗝噶圪塥搿烙疙砝硌纥膈舸菏虼蛤袼铬镉阖颌骼髂鬲鸽\",\r\n  gei: \"给胲\",\r\n  gen: \"跟根哏艮茛更颈耕耿亘\",\r\n  geng: \"更颈耕耿亘哽埂庚梗炅炔粳绠羹赓邢鲠鹒\",\r\n  go: \"公工共功红供够构攻狗\",\r\n  gon: \"公工共功红供攻宫恭贡\",\r\n  gong: \"公工共功红供攻宫恭贡躬拱弓巩唝廾汞珙肱蚣蛩觥赣龚\",\r\n  gou: \"够构狗购沟勾钩佝垢媾岣彀枸笱篝缑耩苟觏诟逅遘鞲骺\",\r\n  gu:\r\n    \"告古故姑顾股骨鼓谷固孤估贾雇辜咕嘏崮梏毂汩沽牯牿瓠痼皋瞽箍罟胍臌菇菰蛄蛊觚诂酤钴钴锢馉骰鲴鸪鹄鹘\",\r\n  gua: \"挂瓜寡刮剐卦呱栝聒胍脶蜗褂诖鸹\",\r\n  guai: \"怪乖拐\",\r\n  guan: \"关管观官馆惯冠贯灌罐倌掼擐斡棺浣涫盥矜纶缶脘莞菅鳏鹳\",\r\n  guang: \"光广逛咣桄潢犷胱\",\r\n  gui:\r\n    \"规归贵鬼桂跪柜轨龟瑰傀刽刿匦匮圭妫宄庋撅晷桧洼炅炔癸皈眭瞆硅祈簋觖诡蹶闺隗鲑鳜\",\r\n  gun: \"滚棍磙绲衮辊鲧\",\r\n  guo: \"国过果郭锅裹呙埚崞帼掴椁涡猓聒虢蜮蜾蝈蠃馃馘\",\r\n  h: \"和会后好还行回话很海\",\r\n  ha: \"哈虾獬蛤铪好还行海孩\",\r\n  hai: \"还海孩害咳亥嗨氦胲醢颏骇骸\",\r\n  han:\r\n    \"汉喊含寒汗韩罕憾翰涵函旱撼悍憨捍撖擀旰晗泔澉瀚焊焓犴菡蚶邗邯酐酣闬顸颌颔鼾\",\r\n  hang: \"行航杭巷吭夯桁沆炕绗肮酐颃鸻\",\r\n  hao: \"好号毫豪浩耗嗥嚆嚎壕昊涸濠灏皋皓睾蒿薅蚝貉郝镐颢\",\r\n  he:\r\n    \"和何合河喝核吓赫荷贺盒呵鹤禾劾嗑嗬壑曷洽涸盍硅纥翮耠苛菏藿蚵蝎褐诃貉钾阂阖颌饸鲄鹖龁䙓\",\r\n  hei: \"黑嘿\",\r\n  hen: \"很恨狠痕哏艮行横哼衡\",\r\n  heng: \"行横哼衡恒亨桁珩绗蘅訇鸻黉\",\r\n  ho: \"后红候洪厚後轰鸿宏侯\",\r\n  hon: \"红洪轰鸿宏哄虹唝弘泓\",\r\n  hong: \"红洪轰鸿宏哄虹唝弘泓洚烘纮荭蕻薨訇讧闳黉\",\r\n  hou: \"后候厚後侯喉吼猴堠灬瘊篌糇逅骺鲎鲘\",\r\n  hu:\r\n    \"和许乎胡户护呼忽湖狐互核虎糊沪壶冱唬唿囫岵弧怙惚戽扈斛槲汩浒滹烀煳猢琥瑚瓠祜笏胍芋芴葫虍蝴觳轷酏醐鳠鹄鹕鹘鹱\",\r\n  hua: \"话化华花划画滑哗婳桦狯猾砉稞豁踝铧骅㟆\",\r\n  huai: \"怀坏淮孬徊槐踝\",\r\n  huan:\r\n    \"还欢换环缓幻患唤圜垸奂宦寰擐桓洹浣涣漶焕獾瑗痪皖眩缳脘苋萑豢逭郇锾镮阛鬟鲩\",\r\n  huang: \"黄皇荒晃慌惶煌谎恍凰幌徨湟潢潢璜癀磺篁簧肓蝗蟥遑锽隍鳇\",\r\n  hui:\r\n    \"会回挥汇灰辉惠慧毁悔恢绘徽溃贿讳卉咴哕喙彗徊恚悝戯晖晦桧洄烩珲皓眭秽缋茴荟蕙虺蛔蝰蟪袆诙诲钺阓隳颒麾\",\r\n  hun: \"婚混魂昏浑溷珲荤诨阍馄\",\r\n  huo: \"和话活或火获伙货祸惑霍劐嚯壑夥攉瓠砉硅耠藿蠖豁钬锪镬鳠鹱\",\r\n  j: \"就家见经将进其己机给\",\r\n  ji:\r\n    \"其己机给几期系计及记革即技基极际济集级奇急纪击既辑激寄继积忌吉迹鸡季骑疾籍挤寂绩祭饥妓肌脊圾剂藉讥姬丌乩亟伎佶偈冀剞叽咭哜唧墼嫉屐岌嵇嵴彐悸戟戢掎揖暨棘楫殛汲洎犄猗玑畸畿疵瘠瘵睽瞿矶秸稷稽笄笈箕粢缉羁脔芨芰荠萁蒺蓟蕺虮觊赍跻跽郅钑霁骥鱾鲚鲫鹡麂齑\",\r\n  jia:\r\n    \"家加价假架甲佳夹驾嫁嘉贾颊稼伽嘏岬恝戛拮挟枷柙槚浃珈痂瘕笳胛茄荚葭蛱袈袷跏迦郏钾铗铪镓颉饸骱䇲\",\r\n  jian:\r\n    \"见间件建剑渐简坚监健检肩减尖兼奸箭舰艰键鉴剪践荐贱捡拣煎俭僭囝戋戬搛枧柬楗槛歼毽沮涧湔湛溅牮犍犴睑硷碱笕笺箴缄缣翦腱茛茧菅蒹裥謇谏谫谮趼踺蹇钘锏鞯饯鲣鳒鹣\",\r\n  jiang: \"将强江讲奖降蒋疆虹匠姜僵酱浆桨洚犟礓糨绛缰耩茳螀襁豇鳉\",\r\n  jiao:\r\n    \"教叫觉交校脚较角焦轿娇骄郊缴嚼胶搅浇绞佼侥僬剿噍姣峤徼徼挢敫椒湫爝狡皎矫矫礁窖艽茭荞菽蕉蛟跤酵醮铰饺鲛鹪䴔\",\r\n  jie:\r\n    \"家界解接结价节姐街阶介借届杰截洁戒皆揭捷劫竭藉偈偕卩喈嗟婕孑廨拮栉桀桔楷獬疖疥睫砝碣秸羯芥苴葜蚧袷讦诘诫锴颉骱髻鲒鹖\",\r\n  jin:\r\n    \"进金今近尽紧仅禁劲津斤锦筋谨晋巾浸襟卺噤堇妗廑槿湛烬瑾矜缙肋荩衿觐赆钅靳馑\",\r\n  jing:\r\n    \"经京精竟惊境静景警睛靖劲敬竞净镜径井晶颈儆兢刭婧弪憬旌晟檠泾烃獍痉箐粳肼胫腈茎荆菁蜻迳阱陉靓鲸黥䴖\",\r\n  jio: \"垧扃炅炯窘迥颎䌹\",\r\n  jion: \"垧扃炅炯窘迥颎䌹\",\r\n  jiong: \"垧扃炅炯窘迥颎䌹\",\r\n  jiu: \"就九究久酒救旧舅纠僦厩咎啾揪柩桕湫灸玖疚缪臼艽蝤赳赳阄韭鬏鸠鹫\",\r\n  ju:\r\n    \"车据且局举句具居剧巨聚距拒惧俱柜矩拘菊倨咀屦掬枸桔椐榉榘橘沮炬犋狙琚疽瞿窭苣苴莒菹蛆裾讵趄踞踽遽鄹醵钜锔锯雎鞠鞫飓驹鬻鲏龃䴗\",\r\n  jua: \"卷圈捐倦娟桊泫涓狷甄\",\r\n  juan: \"卷圈捐倦娟桊泫涓狷甄眩眷绢蕊蜷蠲鄄锩镌阮隽鹃䌸\",\r\n  jue:\r\n    \"觉决绝脚角爵掘嚼倔劂厥嗟噘噱孓崛抉撅攫柽桷梏橛爝獗珏矍蕞蕨蛙蠼觖觳诀谲蹶镢阙鳜\",\r\n  jun: \"军均君俊龟峻菌捃浚狻皲睃竣筠訇逡郡钧隽馂骏鲪麇\",\r\n  k: \"会可看开口科快空克客\",\r\n  ka: \"卡刮咖喀佧咔咯胩髂看\",\r\n  kai: \"开凯慨剀垲忾恺揩楷溘蒈铠锎锴闿雉\",\r\n  kan: \"看刊砍堪坎侃勘戡槛瞰莰阚龛\",\r\n  kang: \"康抗慷扛亢伉沆炕糠肮钪闶\",\r\n  kao: \"考靠烤尻拷栲槁犒铐鲓\",\r\n  ke:\r\n    \"可科克客刻课颗柯渴棵磕咳壳哿嗑坷岢恪氪溘珂疴盍瞌碣稞窠缂苛蚵蝌轲钶铪锞颏骒髁\",\r\n  kei: \"克\",\r\n  ken: \"肯恳啃垦裉颀龂龈坑吭\",\r\n  keng: \"坑吭硁硎胫铿\",\r\n  ko: \"口空恐控孔扣佝倥叩寇\",\r\n  kon: \"空恐控孔倥崆穹箜\",\r\n  kong: \"空恐控孔倥崆穹箜\",\r\n  kou: \"口扣佝叩寇抠挎筘芤蔻\",\r\n  ku: \"苦哭库裤酷枯刳喾堀挎窟绔绹轱骷\",\r\n  kua: \"跨夸垮侉挎胯锞髁会快\",\r\n  kuai: \"会快块筷侩呙哙栝桧浍狯脍蒉蒯郐魁鲙㧟㱮\",\r\n  kuan: \"款宽髋况狂矿旷框匡哐\",\r\n  kuang: \"况狂矿旷框匡哐圹夼湟眶磺筐纩诓诓诳贶邝\",\r\n  kui: \"亏愧溃奎傀匮喟喹夔岿悝愦揆暌盔睽瞆窥篑聩臾葵蒉蝰觖跬逵隗顷馈馗骙魁㱮\",\r\n  kun: \"困昆坤壸巛悃捆琨裈醌锟阃髡鲲鹍麇\",\r\n  kuo: \"括扩阔廓栝蛞\",\r\n  l: \"了来里老两理力立路利\",\r\n  la: \"落拉啦辣喇腊蜡剌垃摺旯瘌癞砬邋镴\",\r\n  lai: \"来厉赖莱俫崃徕梾涞濑癞睐籁赉铼黧\",\r\n  lan: \"兰栏蓝烂览拦懒篮滥缆啉婪岚廪揽斓榄漤澜罱褴谰郴镧阑㨫䍀\",\r\n  lang: \"浪郎朗狼廊啷榔琅稂羹莨蒗螂踉锒阆阆\",\r\n  lao: \"老落劳络牢姥捞佬唠崂栎栳涝潦潦烙獠痨耢蓼酪醪铑铹\",\r\n  le: \"了乐勒仂叻捋泐肋饹鳓\",\r\n  lei: \"类泪雷累勒垒儡嘞埒嫘擂擂檑漯磊缧羸耒肋蕾诔酹镭\",\r\n  len: \"冷愣塄棱楞\",\r\n  leng: \"冷愣塄棱楞\",\r\n  li:\r\n    \"里理力立利李历离丽礼例厉励黎璃哩莉粒隶梨栗俐俚俪傈厘吏呖唳喱坜娌嫠悝捩枥栎沥溧漓澧牦犁狸猁珞疠疬痢砬砺砾硌笠篥篱粝缡罹翮苈荔莅蓠藜蛎蜊蠡詈跞轹逦郦酾醴锂镉雳霾骊髦鬲鲡鲤鳢鹂黧䲞\",\r\n  lia: \"俩了两连联量脸料亮练\",\r\n  lian: \"连联脸练恋怜莲炼廉帘链奁娈敛梿楝殓涟潋濂琏瞵碾羸膦臁苓莶蔹蠊裢裣镰鲢\",\r\n  liang: \"两量亮良粮辆梁凉俩谅唡墚晾椋粱莨踉辌阆魉\",\r\n  liao: \"了料疗聊辽僚寥嘹寮尥廖撂撩撩潦燎燎獠缪缭蓼钌镣鹨鹩\",\r\n  lie: \"列烈裂劣猎冽咧戾捩洌膊趔躐邋鬣䴕\",\r\n  lin: \"林临邻琳淋凛吝啉嶙廪懔檩瞵磷禀粼膦蔺赁躏辚遴霖鳞麟\",\r\n  ling: \"领令另灵零龄凌玲铃陵岭伶呤呤囹拎柃棂棱泠瓴磷绫羚翎聆苓菱蛉酃鲮鸰㻏\",\r\n  liu: \"六流留陆刘柳溜碌旒榴泖泵浏熘琉瘤硫绺蒌蓼遛鎏铆锍镏镠飗馏骝鹠\",\r\n  lo: \"咯龙楼露弄隆笼漏搂陋\",\r\n  lon: \"龙弄隆笼拢胧聋垄咙垅\",\r\n  long: \"龙弄隆笼拢胧聋垄咙垅昽栊泷珑癃眬砻窿茏陇\",\r\n  lou: \"楼露漏搂陋偻喽娄嵝瘘窭篓耧蒌蝼镂髅䁖\",\r\n  lu:\r\n    \"路陆露录绿鲁卢炉鹿碌芦庐卤噜垆戮掳撸栌橹泸渌漉潞璐瘳禄箓簏胪舻蓼虏赂轳辂辘逯酪镥颅鲈鸬鹭麓\",\r\n  lua: \"乱卵娈孪峦挛栾滦脔銮\",\r\n  luan: \"乱卵娈孪峦挛栾滦脔銮鸾\",\r\n  lun: \"论轮伦沦仑囵抡纶\",\r\n  luo:\r\n    \"落罗络洛逻骆裸萝锣倮捋摞椤橐氇泺漯烙猓猡珞瘰硌箩脶荦蔂蜾螺蠃蠡袼跞酪铬镙雒骡㑩䲞\",\r\n  lü: \"律率旅绿虑吕履缕侣偻屡嵝捋榈氯滤瘘稆膂褛铝闾驴\",\r\n  lüe: \"略掠撂锊\",\r\n  m: \"们么没无面民美明名门\",\r\n  ma: \"马吗妈骂麻摩码嘛玛抹唛嬷杩犸祃蚂蚂蟆貉靡麽\",\r\n  mai: \"买卖麦埋脉迈劢狸荬霡霾\",\r\n  man: \"满慢漫埋曼蛮瞒墁幔熳缦蔓螨谩蹒镘鞔颟馒鳗\",\r\n  mang: \"忙茫盲芒氓漭瞢硭莽蟒邙铓\",\r\n  mao: \"毛冒贸貌矛猫帽茅茂卯峁懋旄昴泖牟牦瑁瞀耄茆蝥蟊袤铆锚髦\",\r\n  me: \"么麼末麽们没美门每妹\",\r\n  mei: \"没美每妹梅眉媒枚煤谜媚霉昧玫寐嵋楣浼湄猸瑁糜莓袂酶镁镅靡魅鹛\",\r\n  men: \"们门闷懑扪汶满焖钔鞔\",\r\n  meng: \"梦蒙猛盟孟朦氓勐懵檬甍瞑瞢礞艋艨苎萌虻蜢蟊蟒蠓锰鹲黾\",\r\n  mi: \"米密秘迷弥蜜谜觅佴咪嘧宓幂弭敉汨泌溟狝猕眯眯祢糜糸縻脒芈蘼谧醚靡麋\",\r\n  mia: \"面免妙描苗庙棉绵眠勉\",\r\n  mian: \"面免棉绵眠勉缅冕娩沔泯渑湎眄瞑腼黾\",\r\n  miao: \"妙描苗庙秒渺喵杪淼眇瞄缈缪藐蜱邈钞鹋\",\r\n  mie: \"灭蔑乜咩篾芈蠛\",\r\n  min: \"民敏岷悯愍抿汶泯渑玟珉缗苠闵闽鳘黾\",\r\n  ming: \"明名命鸣盟铭冥暝溟皿瞑茗萌螟酩\",\r\n  miu: \"谬缪\",\r\n  mo:\r\n    \"么没无万模莫默摸麼末摩磨魔脉漠墨抹陌寞沫膜嫫摹殁瘼秣耱茉蓦藐蘑蟆袜谟貉貊貘镆霡靡馍麽\",\r\n  mou: \"某谋侔厶哞毋牟眸瞀缪蛑蝥袤鍪\",\r\n  mu: \"目母木模幕慕墓姆姥穆牧亩沐募仫坶拇暮毪牟牡睦缪苜钼鹜\",\r\n  n: \"你年那能女内难南呢拿\",\r\n  na: \"那南拿哪纳呐捺箬絮肭衲讷钠镎\",\r\n  nai: \"奶乃耐奈佴柰氖艿萘鼐\",\r\n  nan: \"难南男喃囝囡楠罱腩蝻赧\",\r\n  nang: \"囊囔攮曩馕\",\r\n  nao: \"脑闹恼呶垴孬挠桡淖猱瑙硇铙䜧\",\r\n  ne: \"呢哪呐疔讷那能内嫩\",\r\n  nei: \"那内哪馁\",\r\n  nen: \"嫩能\",\r\n  neng: \"能\",\r\n  ng: \"嗯\",\r\n  ni: \"你呢尼泥拟逆倪妮腻伲匿坭嶷怩慝旎昵猊睨祢铌霓鲵鹝鹢\",\r\n  nia: \"年念娘鸟尿廿酿粘埝嬲\",\r\n  nian: \"年念廿粘埝廾拈拈捻撵碾蔫辇辗鲇鲶黏\",\r\n  niang: \"娘酿\",\r\n  niao: \"鸟尿嬲氽溺脲茑袅\",\r\n  nie: \"捏乜啮嗫孽捻涅聂臬蘖蹑镊镍陧颞䯅\",\r\n  nin: \"您宁凝佞咛拧攘柠泞狞\",\r\n  ning: \"宁凝佞咛拧拧攘柠泞狞甯聍苧\",\r\n  niu: \"牛扭纽妞忸拗狃蚴钮\",\r\n  no: \"农弄浓侬哝秾耨脓㶶\",\r\n  non: \"农弄浓侬哝秾脓㶶\",\r\n  nong: \"农弄浓侬哝秾脓㶶\",\r\n  nou: \"耨\",\r\n  nu: \"怒努奴孥帑弩胬褥驽那\",\r\n  nua: \"暖濡\",\r\n  nuan: \"暖濡\",\r\n  nuo: \"那诺娜挪傩喏懦搦濡砹糯锘\",\r\n  nü: \"女忸恧狃絮肭衄钕乇疟\",\r\n  nüe: \"乇疟虐谑\",\r\n  o: \"哦喔噢区欧偶呕怄殴沤\",\r\n  ou: \"区欧偶呕呕怄殴沤瓯眍禺耦藕讴鸥\",\r\n  p: \"便被平品派片怕般破批\",\r\n  pa: \"派怕爬帕啪趴扒杷琶筢耙芭葩钯\",\r\n  pai: \"派排拍牌迫俳哌徘湃蒎\",\r\n  pan: \"般判盘番胖盼叛拚潘畔攀弁扳拌樊泮爿皤磐蟠袢襻蹒鄱\",\r\n  pang: \"旁胖膀庞乓厐彷滂磅磅耪蒡螃逄鳑\",\r\n  pao: \"跑炮抛袍泡刨匏咆庖狍疱脬苞趵龅\",\r\n  pe: \"朋配培碰陪彭佩赔鹏盆\",\r\n  pei: \"配培陪佩赔呸妃帔徘旆沛淠碚胚艴茇蜚裴辔邳醅锫霈\",\r\n  pen: \"盆喷汾湓朋碰彭鹏捧棚\",\r\n  peng: \"朋碰彭鹏捧棚蓬砰篷膨嘭堋怦抨澎烹甏硼蟛迸\",\r\n  pi:\r\n    \"被批否皮罢坏屁匹疲披脾辟劈啤僻譬丕仳噼圮坯埤媲庀擗枇毗淠濞琵甓疋痞痦癖睥砒篦纰罴芘苤萆蕃薜蚌蚍蜱螵裨貔邳郫鄱铍陂陴霹鲏鼙䴙\",\r\n  pia: \"便片票篇偏飘骗漂朴扁\",\r\n  pian: \"便片篇偏骗扁犏缏翩胼蝙褊谝蹁骈\",\r\n  piao: \"票飘漂朴剽剽嘌嫖殍瓢瞟瞟缥膘莩螵骠髟\",\r\n  pie: \"撇氕瘪瞥苤\",\r\n  pin: \"品贫聘频拼拚姘嫔榀泵牝颦\",\r\n  ping: \"平评凭萍瓶冯屏苹乒坪俜娉枰秤鲆\",\r\n  po: \"破婆迫颇坡泊朴泼魄叵攴泺溥珀皤笸粕膊跛鄱酦钋钷陂\",\r\n  pou: \"剖掊涪瓿裒踣锫\",\r\n  pu: \"普暴扑铺谱仆堡浦朴菩葡蒲瀑匍噗圃埔攴曝氆溥濮璞脯苻莆蹼醭镤镨\",\r\n  q: \"去起前其全情气却期亲\",\r\n  qi:\r\n    \"起其气期吃七器奇企齐妻汽旗棋弃启骑岂枝欺戚契凄歧漆泣乞迄亓亟伎俟偈嘁圻屺岐崎憩挈杞柒栖桤槭欹汔淇琦琪甭畦畸碛祁祈祺稽綦绮缉耆脐芑芪荠萁萋葺蕲虮蛴蜞讫赍趿蹊锜颀骐鲯鳍麒\",\r\n  qia: \"卡恰掐洽疴葜髂前强钱\",\r\n  qian:\r\n    \"前钱千签潜牵浅迁乾遣欠歉谦纤铅谴嵌仟佥倩堑岍悭愆慊扦掮搴撖柑椠涔犍箝缱肷腱芊芡茜荨虔褰蹇钎钤钳锓阡骞鹐黔\",\r\n  qiang: \"强枪墙抢腔丬呛嫱戕戗樯炝爿玱箐羌羟蔷蜣襁跄跫锖锵镪鸧\",\r\n  qiao:\r\n    \"瞧桥悄乔巧敲侨壳雀翘俏劁峤峭愀憔撬樵橇毳硗硝窍缲舄茭荞蕉诮谯跤跷醮锹鞒鞘\",\r\n  qie: \"且切契窃怯伽唼妾惬慊挈沏沏渫砌箧脞茄蕺趄锲\",\r\n  qin: \"亲侵琴秦勤钦擒吣嗪噙寝嵚廑揿槿檎沁渗溱矜禽芩芹蓁螓衾衿覃锓骎\",\r\n  qing: \"情亲清请青轻庆倾晴卿倩圊擎檠氢氰磬箐綮罄苘蜻謦顷鲭鲸黥䞍\",\r\n  qio: \"穷琼穹筇芎苘茕蛩跫邛\",\r\n  qion: \"穷琼穹筇芎苘茕蛩跫邛\",\r\n  qiong: \"穷琼穹筇芎苘茕蛩跫邛銎鞠\",\r\n  qiu: \"求球秋仇丘龟囚瞅俅巯楸氽泅湫犰糗艽虬蚯蝤裘赇逑遒邱酋钆馗鳅鹙鼽\",\r\n  qu:\r\n    \"去区取曲趣屈驱趋娶渠躯凵劬岖朐枸氍璩癯瞿磲祛絮苣蕖蘧蛆蛐蠼衢觑诎遽阒鞠鞫鸲麴黢龋\",\r\n  qua: \"全权卷拳圈劝泉券悛桊\",\r\n  quan: \"全权卷拳圈劝泉券悛桊犬獾畎痊筌绻荃蜷诠辁醛铨颧鬈鳈\",\r\n  que: \"却确缺雀悫攉榷炔瘸舭芍觳郄阕阙鹊\",\r\n  qun: \"群裙蝽逡遁麇\",\r\n  r: \"儿人然日如入任让认\",\r\n  ra: \"然让染绕扰燃饶嚷壤冉\",\r\n  ran: \"然染燃冉苒蚺髯让嚷壤\",\r\n  rang: \"让嚷壤攘瓤禳穰\",\r\n  rao: \"绕扰饶娆桡荛蛲\",\r\n  re: \"若热惹喏人儿任认仍忍\",\r\n  ren: \"人儿任认忍仁刃仞壬妊恁稔纫纴荏葚衽讱赁轫韧饪䌾\",\r\n  reng: \"仍扔穰艿\",\r\n  ri: \"日驲\",\r\n  ro: \"容肉荣蓉柔融揉绒熔溶\",\r\n  ron: \"容荣蓉融绒熔溶冗嵘戎\",\r\n  rong: \"容荣蓉融绒熔溶冗嵘戎榕狨肜茸蝾镕\",\r\n  rou: \"肉柔揉糅蹂鞣\",\r\n  ru: \"如入辱儒乳汝嚅孺洳溽濡缛茹蓐薷褥襦铷颥\",\r\n  rua: \"软朊濡蠕阮\",\r\n  ruan: \"软朊濡蠕阮\",\r\n  rui: \"瑞锐枘睿芮蕊蕤蚋䌼\",\r\n  run: \"润闰\",\r\n  ruo: \"若弱偌箬芮\",\r\n  s: \"是上说时生事手十所三\",\r\n  sa: \"萨撒洒仨卅檫脎趿钑飒\",\r\n  sai: \"思赛塞噻腮蓑鳃\",\r\n  san: \"三散伞叁毵糁馓丧桑嗓\",\r\n  sang: \"丧桑嗓搡磉颡\",\r\n  sao: \"扫嫂骚埽搔瘙缫缲臊鳋\",\r\n  se: \"色塞瑟圾啬槭涩穑蔷铯\",\r\n  sen: \"森僧\",\r\n  seng: \"僧\",\r\n  sh: \"是上说时生事手十身实\",\r\n  sha: \"杀沙傻莎厦刹啥纱煞杉唼嗄歃痧砂裟赊铩霎鲨\",\r\n  shai: \"色晒筛酾\",\r\n  shan:\r\n    \"山单善闪衫禅扇珊陕杉删剡埏姗嬗彡掸掺擅栅檀汕潸澹煽疝缮膳膻舢芟苫蟮詹讪赡跚鄯钐骟髟鳝鳣\",\r\n  shang: \"上商伤尚赏汤晌垧墒殇熵裳觞\",\r\n  shao: \"少烧绍稍哨邵劭勺捎杓梢溲潲笤筲艄芍苕蛸鞘韶\",\r\n  she: \"社设折射舍涉蛇拾摄舌佘厍奢慑揲歙滠猞畲睫蛞赊赦铊阇麝䞌\",\r\n  shei: \"谁\",\r\n  shen: \"身什神深甚参伸申审沈慎绅吲呻哂娠婶抻椹渖渗瘆矧砷肾胂莘葚蜃诜谂鲹\",\r\n  sheng: \"生声省胜升圣乘盛剩牲绳嵊晟渑甥眚笙\",\r\n  shi:\r\n    \"是时事十实什使世市师士式识始史失似石视示势室食诗试施适释氏尸侍拾驶湿饰逝誓殖狮匙蚀仕嗜噬埘屎峙弑弛恃拭柿炻矢礻筮耆舐莳蓍虱螫谥豉豕贳轼郝酾铈铊饣鲥鲺鳀鸤䴓\",\r\n  sho: \"手受收首授守熟售瘦寿\",\r\n  shou: \"手受收首授守熟售瘦寿兽狩绶艏\",\r\n  shu:\r\n    \"书数术树属输熟述束叔舒殊署鼠疏俞竖暑抒梳蔬淑枢倏塾墅姝孰庶恕戍摅曙杼樗殳毹沭涑漱澍疋秫纾腧荼菽薯蜀蜍赎黍\",\r\n  shua: \"刷耍唰涮双率摔爽衰帅\",\r\n  shuai: \"率摔衰帅甩缞蟀\",\r\n  shuan: \"拴揎栓汕涮踹闩双爽霜\",\r\n  shuang: \"双爽霜孀泷淙骦鹴\",\r\n  shui: \"说水谁睡税蜕\",\r\n  shun: \"顺瞬吮舜䞐\",\r\n  shuo: \"说数硕烁妁搠朔杓槊溯濯芍蒴铄\",\r\n  si:\r\n    \"四死司思似斯食丝私寺撕厕肆伺俟兕厮厶咝嗣嘶姒巳汜泗澌祀祠笥糸纟缌耜肄苡菥蛳锶雉飔饲饴驷鸶\",\r\n  so: \"送松宋搜颂嵩艘耸诵讼\",\r\n  son: \"送松宋颂嵩耸诵讼凇崧\",\r\n  song: \"送松宋颂嵩耸诵讼凇崧忪怂悚淞竦菘锶\",\r\n  sou: \"搜艘叟嗖嗽嗾擞涑溲漱瞍薮螋锼飕馊\",\r\n  su: \"苏诉速素俗宿肃稣塑僳嗉夙愫涑溯簌粟蓿蔌觫谡酥骕鹔\",\r\n  sua: \"算酸狻蒜\",\r\n  suan: \"算酸狻蒜\",\r\n  sui: \"虽随岁碎尿遂彗攵濉燧眭睢祟穗绥荽蓑谇邃隋隧髓䍁\",\r\n  sun: \"孙损榫狲笋荪跣隼飧\",\r\n  suo: \"所索缩锁莎嗦唆唢嗍娑挲桫梭琐睃羧蓑逡\",\r\n  t: \"他她天头同听太体通提\",\r\n  ta: \"他她它达踏塔拓塌嗒挞榻沓溻漯獭趿跶蹋遢铊闼阘鳎\",\r\n  tai: \"太台态抬泰胎汰炱肽苔薹跆邰酞钛骀鲐\",\r\n  tan: \"谈弹探叹坦坛贪摊滩谭潭毯炭啴坍忐昙檀湛澹痰瘫眈碳膻舔荨蕈袒覃赕郯钽锬镡\",\r\n  tang: \"堂唐倘躺汤糖趟塘烫膛淌傥帑惝搪棠樘溏瑭羰耥螗螳醣铴镋镗\",\r\n  tao: \"讨套逃挑桃涛陶掏萄淘滔叨啕梼洮焘绦绹韬饕鼗\",\r\n  te: \"特忑忒慝铽腾疼藤滕誊\",\r\n  ten: \"腾疼藤滕誊\",\r\n  teng: \"腾疼藤滕誊\",\r\n  ti: \"体提题弟替踢梯倜剃剔啼嚏屉悌惕棣涕睇绨缇荑裼谛蹄逖醍锑鳀鹈䗖䴘\",\r\n  tia: \"天条调田跳挑甜添填佃\",\r\n  tian: \"天田甜添填佃嗔忝恬掭栝殄滇町畋腆舔苫蚕蚺觍钿锘阗颋䩄\",\r\n  tiao: \"条调跳挑佻眺祧稠窕笤粜苕蜩踔迢铫髫鲦龆\",\r\n  tie: \"铁贴帖帖揲萜锇餮\",\r\n  tin: \"听停庭厅挺亭廷艇婷梃\",\r\n  ting: \"听停庭厅挺亭廷艇婷梃汀烃町耵莛葶蜓铤霆颋\",\r\n  to: \"头同通统投痛童透偷铜\",\r\n  ton: \"同通统痛童铜桐桶筒仝\",\r\n  tong: \"同通统痛童铜桐桶筒仝佟侗侗僮嗵垌峒彤恫恸捅潼瞳砼硐艟茼酮鲖\",\r\n  tou: \"头投透偷钭骰\",\r\n  tu: \"突土图徒途吐涂屠秃兔凸堍芏荼菟酴钍\",\r\n  tua: \"团彖抟揣湍疃鹑\",\r\n  tuan: \"团彖抟揣湍疃鹑\",\r\n  tui: \"推退腿煺萑褪颓\",\r\n  tun: \"吞屯囤暾氽沌炖窀肫臀褪豚饨鲀\",\r\n  tuo:\r\n    \"他脱托拖妥拓陀魄乇佗佗唾坨庹捝摭柁柝棁椭橐沱沲砣箨绥讬跎迤酏酡铊隋饦驮驼鸵鼍䓕\",\r\n  w: \"我为文无外问位五万王\",\r\n  wa: \"瓦娃挖哇佤凹娲洼腽蛙袜鲑\",\r\n  wai: \"外歪呙夭㖞\",\r\n  wan: \"万完晚湾玩碗弯腕顽挽婉宛丸剜娩惋浣烷琬畹皖箢纨绾脘芄莞菀蔓蜿豌鞔鲩\",\r\n  wang: \"王望往网忘亡汪妄旺枉芒尢惘罔辋魍㲿\",\r\n  we: \"为文问位未委微闻卫韦\",\r\n  wei:\r\n    \"为位未委微卫韦围威维味遗伟危谓唯慰尾违魏喂伪畏胃惟倭偎囗圩娓尉崴嵬巍帏帷桅沩洧涠渭潍炜煨熨猗猥猬玮痿眭硙纬艉芟苇荽萎葳蔚薇诿軎逶闱阢隈隗隹韪鲔鳂鳚㧑䓕\",\r\n  wen: \"文问闻温稳吻纹刎愠揾殁汶煴玟珉璺瘟笏紊缊蕰蚊辒阌雯鳁\",\r\n  weng: \"翁嗡瓮蓊蕹鹟\",\r\n  wo: \"我握窝卧沃倭喔夭幄挝斡涡瘟硪肟莴蜗龌\",\r\n  wou: \"渥\",\r\n  wu:\r\n    \"无五务物武恶屋吴午舞误污乌伍於悟雾吾呜勿侮兀捂仵唔圬坞垭妩婺寤巫庑忤怃悮戊晤杌梧毋浯渥焐牾痦瞀笏芜芴蜈蝥诬迕邬鋈钨铻阢骛鹀鹉鼯\",\r\n  x: \"下学小心想行见现些向\",\r\n  xi:\r\n    \"西系息喜希席细习吸戏洗惜析悉稀袭熙嘻夕牺锡膝撕溪昔腊媳晰粞隙熄僖兮唏嘶奚嬉屃屎屣嵇徙戯曦栖樨檄欷歙汐浠淅澌烯熹犀玺畦皙矽硒禊禧穸绤羲翕舄舾茜菥葸蓰蜥蜴螅蟋裼褶觋诶蹊郄郗酾醯钖铣阋饩鳃鳛鼷䜣\",\r\n  xia: \"下夏吓侠霞峡瞎厦狭暇虾匣呷挟柙歃毳洽狎瑕瘕硖罅葭辖遐黠\",\r\n  xian:\r\n    \"见现先显线险限县鲜献洗仙闲陷贤宪洒嫌掀纤羡弦衔伣冼咸娴岘崄彡挦掺暹氙涎濂燹狝猃痃痫癣碱祆筅籼腺舷苋莶藓蚬跣跹酰钐铣铦锨锬霰馅鹇黹\",\r\n  xiang: \"想向相象像香响项乡降享箱详祥襄湘巷厢翔镶橡庠攘缃舡芗葙蟓飨饷骧鲞\",\r\n  xiao:\r\n    \"小笑校消效销晓萧肖削潇孝啸宵哓哮嚣姣枭枵梢淆爻狡硝筱箫绡芍茭蛸蟏逍酵霄骁魈鸮\",\r\n  xie:\r\n    \"些解写血谢叶协鞋斜邪胁携泄歇械屑谐卸泻亵偕勰廨懈挟撷桔楔榍榭歙渫溉瀣燮獬眭绁缬苴薤蝎蟹跬躞迦邂隰颉骱鲑䙊\",\r\n  xin: \"心新信寻辛欣芯薪馨囟忻昕歆莘衅鑫锌镡骍䜣\",\r\n  xing: \"行性形兴星省姓型幸醒刑腥杏悻惺擤猩硎荇邢钘铏陉饧\",\r\n  xio: \"兄雄胸凶熊汹匈芎讻诇\",\r\n  xion: \"兄雄胸凶熊汹匈芎讻诇\",\r\n  xiong: \"兄雄胸凶熊汹匈芎讻诇\",\r\n  xiu: \"修秀休袖宿臭羞绣朽咻嗅岫庥溴煦莠貅锈馐髹鸺\",\r\n  xu:\r\n    \"许需续须虚徐序绪蓄吁叙畜婿勖咻嘘圩墟屿恤戌旭旮旯栩洫溆煦盱砉糈絮肷胥芋蓿诩谞酗醑雩顼馘\",\r\n  xua: \"选宣玄旋悬券喧儇埙揎\",\r\n  xuan: \"选宣玄旋悬券喧儇埙揎擐暄楦泫洵涓渲漩炫煊璇癣眩碹绚萱谖轩铉镟馔\",\r\n  xue: \"学血雪穴削薛噱泶炔谑踅靴鳕鸴\",\r\n  xun:\r\n    \"寻讯训迅询巡逊循旬勋埙孙峋巽徇恂挦曛梭殉汛洵浔浚熏狻獯窨荀荤荨蕈薰逡遁郇醺鑫驯鲟\",\r\n  y: \"一有也要以么于用又已\",\r\n  ya:\r\n    \"亚压呀牙雅押哑崖涯丫鸭讶鸦伢垭娅岈挜揠柙桠氩琊疋痖睚砑碣芽蚜衙轧辂迓铔䅉\",\r\n  yai: \"睚\",\r\n  yan:\r\n    \"眼言研广严演验烟燕延沿颜殷掩厌岩咽炎艳盐宴嫣雁焰淹焉彦俨偃兖剡厣唁埏堰奄妍崦恹晏檐氤洇涎湮滟焱琰砚硎筵罨胭腌芫菸蔫蜒衍覃觃讠谚谳赝趼郾鄢酽闫阉阎阏阽餍魇鹌黡鼹\",\r\n  yang: \"样阳杨央养洋扬羊仰痒佯徉怏恙旸殃氧泱漾炀烊玚疡秧蛘鞅飏鸯\",\r\n  yao:\r\n    \"要么约药摇腰遥咬耀邀姚哟妖窑谣吆夭尧峣崤崾幺徭徼曜杳洮淆瀹爻珧瑶疟祆窈窕繇肴舀荛轺钥铫飖鳐鹞\",\r\n  ye: \"也业夜爷叶野耶页邪咽液冶噎拽掖揲揶晔曳椰洇烨琊腋荼谒邺铘靥馌\",\r\n  yi:\r\n    \"一以已意义议衣易医依异艺亿疑益移遗仪亦忆译伊宜尾蛇椅谊翼艾泄役抑姨毅逸夷裔倚溢矣乙疫仡佗佚佾刈劓勚呓咦咿嗌噫圯埸壹奕屹峄嶷弈弋彝怡怿悒懿挹掖揖旖昱曳欹殪洫渫漪焱熠犄猗疙痍瘗癔眙硪祎绁绎缢羿翊翌翳肄胰腋臆舣芸苡荑薏蚁蛾蜴袂诒诣贻轶迤邑酏钇铱锜镒镱阝雉颐饴饻驿鹝鹢鹥黝黟\",\r\n  yin:\r\n    \"因音引印银烟隐阴饮殷吟姻淫尹荫吲喑圻垠堙夤寅廴氤沂洇湮狺瘾窨纼胤芩茚茵蚓訚鄞铟霪骃鳏龂龈䜣\",\r\n  ying:\r\n    \"应英影营迎硬映盈赢鹰婴颖嘤媵嬴撄楹樱滢潆瀛瑛璎瘿绬缨罂膺茔荥荧莹莺萤萦蓥蝇逞郢锳颍颕鹦\",\r\n  yo: \"育哟唷有用又由友游右\",\r\n  yon: \"用永拥勇涌庸泳佣俑咏\",\r\n  yong: \"用永拥勇涌庸泳佣俑咏喁墉壅恿慵甬痈臃臾蕹蛹踊邕镛雍颙饔鲬鳙\",\r\n  you:\r\n    \"有又由友游右优油邮犹尤忧幽幼悠诱佑侑卣呦囿宥尢揄攸柚泅牖猷疣繇聱莜莠莸蚰蚴蝣蝤酉釉铀铕鱿鲉黝鼬\",\r\n  yu:\r\n    \"于与语育余遇雨玉预鱼欲域誉予狱愈於宇御郁豫渔吁愚俞愉羽寓浴裕娱舆喻粥伛俣喁噢圄圉圩妤妪尉屿峪嵛庾揄昱梧榆欤毓毹汩淤渝滪煜煨熨燠狳瑜畲瘀瘐盂禹禺窬窳竽纡聿肀腧腴臾舁芋菸萸蓣蔚虞蜍蜮蝓衙衙觎谀谕迂逾钰铻阈阏隅雩饫馀驭鬻鹆鹬龉\",\r\n  yua: \"员原元远院愿园源圆袁\",\r\n  yuan:\r\n    \"员原元远院愿园源圆袁缘怨援冤宛渊圜垣塬媛掾橼沅涓爰猿瑗畹眢箢芫苑菀螈贠辕阮陨鸢鸳鹓鼋\",\r\n  yue: \"月越乐约跃阅岳曰悦刖哕栎樾瀹粤蠖钥钺龠\",\r\n  yun: \"运云允晕韵孕匀蕴恽愠昀榅殒氲煴熨狁瘟筠筼纭缊耘芸苑菀蕰贠赟郓郧酝陨韫\",\r\n  z: \"在这中子自着之只作主\",\r\n  za: \"杂扎砸咋匝咂唼拶籴鲝\",\r\n  zai: \"在再载灾仔宰哉崽栽甾\",\r\n  zan: \"咱赞暂拶攒昝涔湔瓒簪糌臜趱酂錾\",\r\n  zang: \"藏脏葬奘臜臧赃驵\",\r\n  zao: \"早造遭糟躁灶燥噪凿唣枣槽澡皂窖缫缲藻蚤\",\r\n  ze: \"则泽责择咋仄啧帻昃柞稷窄笮箦舴赜迮鲗\",\r\n  zei: \"贼\",\r\n  zen: \"怎谮曾增综赠憎甑缯罾\",\r\n  zeng: \"曾增综赠憎甑缯罾锃\",\r\n  zh: \"这中着之只主长知种者\",\r\n  zha: \"查扎炸诈眨咋乍吒咤哳喋喳揸札柞栅楂榨槎渣渫猹痄砟碴笮苴蚱轧铡闸鲊齄\",\r\n  zhai: \"摘齐择侧债宅寨斋疵瘵砦窄翟膪\",\r\n  zhan: \"战展站占颤斩沾粘崭搌旃栈毡湔湛澶盏瞻绽蘸袒觇詹谵躔辗醮飐骣鳣鹯黏\",\r\n  zhang: \"长张掌章丈帐仗障涨杖胀账彰仉嫜嶂幛樟漳獐璋瘴绱蟑鄣\",\r\n  zhao: \"着找照招著朝赵召兆罩昭爪啁搔棹沼淖濯笊肇蚤诏钊鸼\",\r\n  zhe: \"这着者著折哲浙遮乇慑摺柘磔耷聂蔗蛰蜇螫褚褶谪赭辄辙锗陬鹧䗖\",\r\n  zhei: \"这\",\r\n  zhen: \"真阵镇震针珍振圳诊侦贞枕斟朕椹榛浈溱滇甄畛疹砧稹箴纼缜胗臻蓁赈轸鸩\",\r\n  zheng: \"正政争证整征丁郑挣睁怔症蒸峥帧徵拯桢狰町瞠祯筝诤钲铮锃鲭\",\r\n  zhi:\r\n    \"之只知制至直指治识志支职质致止值织纸置智执址氏迟枝植旨掷殖芷芝侄秩肢滞汁脂稚帜卮吱咫埴夂峙帙彘徵忮挚摭昵枳枳栀栉桎氐炙痔痣砥祁祉祗窒絷耆胝膣蛭蛰蜘觯豸贽趵趾跖踬踯轵轾郅郦酯铚锧陟雉骘鸱鸷黹㛿\",\r\n  zho: \"中种重周众终州钟洲忠\",\r\n  zhon: \"中种重众终钟忠仲衷肿\",\r\n  zhong: \"中种重众终钟忠仲衷肿冢忪潼盅舂舯蚣螽踵锺\",\r\n  zhou: \"周州洲舟皱宙骤粥轴昼咒啁啄妯帚碡籀繇纣绉肘胄舳荮诌诪赒辀酎驺鬻鲖鸼\",\r\n  zhu:\r\n    \"主住术注著助属朱诸逐竹珠驻猪筑祝柱烛嘱煮株铸蛛伫侏妯拄杼柚楮槠橥泞洙渚潴澍炷疰瘃瞩竺纻翥舳苎苧茁茱蚰蛀褚诛贮邾铢鬻麈㔉\",\r\n  zhua: \"抓爪挝传转专装状庄撞\",\r\n  zhuai: \"转拽\",\r\n  zhuan: \"传转专赚砖撰啭抟沌湍篆颛馔\",\r\n  zhuang: \"装状庄撞壮妆桩幢僮奘戆艟\",\r\n  zhui: \"追坠惴揣椎槌缀缒萑赘锥隧隹骓\",\r\n  zhun: \"准盹窀肫胗谆隼\",\r\n  zhuo: \"着著桌捉卓缴琢倬勺啄拙擢斫棁棹浊浞涿淖濯灼焯禚箸绌肫茁蕞诼趵踔躅酌镯\",\r\n  zi:\r\n    \"子自字资齐紫姊姿仔滋咨兹吱呲孜孳嵫恣梓淄渍滓甾疵瘠眦秭笫籽粢糍缁耔茈觜訾谘赀趑辎锱镃髭鲻鹚龇\",\r\n  zo: \"走总宗纵奏踪综偬揍枞\",\r\n  zon: \"总宗纵踪综偬枞棕疭粽\",\r\n  zong: \"总宗纵踪综偬枞棕疭粽腙骔鬃\",\r\n  zou: \"走奏揍楱诌诹邹鄹陬驺鲰\",\r\n  zu: \"组足族祖阻租俎卒咀沮淬苴菹诅蹴镞驵\",\r\n  zua: \"钻赚攥纂缵躜\",\r\n  zuan: \"钻赚攥纂缵躜\",\r\n  zui: \"最罪嘴堆醉羧蕞觜\",\r\n  zun: \"尊遵撙樽鳟\",\r\n  zuo: \"作做坐左座昨佐琢乍凿唑嘬怍撮柞砟祚笮胙迮酢阼\"\r\n};\r\n","import events from \"events\";\r\nimport _ from \"lodash\";\r\nimport suggestionData from \"./CNSuggestionsData\";\r\nclass CNSuggestions {\r\n  constructor() {\r\n    this.events = new events.EventEmitter();\r\n    this.events.setMaxListeners(100);\r\n    console.log(\"Will init the CN suggestions\");\r\n    this.suggestions = suggestionData;\r\n  }\r\n\r\n  getSuggestions(idx) {\r\n    return _.isNumber(idx) ? this.suggestions[idx] : this.suggestions;\r\n  }\r\n\r\n  getChar(n) {\r\n    n = --n < 0 ? 9 : n;\r\n    return this.suggestions[n];\r\n  }\r\n\r\n  charProcessor(chr, buf) {\r\n    let num, str, arr;\r\n    if (chr == `{bksp}`) {\r\n      // backspace\r\n      if (buf && (str = buf.slice(0, -1))) {\r\n        this.events.emit(\r\n          `displaySuggestionBox`,\r\n          this.suggestions[str.toLowerCase()] || []\r\n        );\r\n        return [str, str.length];\r\n      }\r\n      this.events.emit(`displaySuggestionBox`, false);\r\n      return [\"\", 0]; // total delete; some other cases\r\n    }\r\n    // non backspace\r\n    str = buf + chr;\r\n    arr = this.suggestions[str.toLowerCase()] || [];\r\n    if (arr.length) {\r\n      // miao\r\n      this.events.emit(\r\n        `displaySuggestionBox`,\r\n        typeof arr == \"string\"\r\n          ? (this.suggestions[str.toLowerCase()] = arr.split(\"\"))\r\n          : arr\r\n      );\r\n      return [str, str.length];\r\n    }\r\n    if (!this.getSuggestions().length) {\r\n      this.events.emit(`displaySuggestionBox`, false);\r\n      return [buf + chr, 0]; //non-chinese talk\r\n    }\r\n    if (isFinite((num = parseInt(chr)))) {\r\n      // miao3\r\n      str = this.getChar(num);\r\n      if (!str) {\r\n        //miao9 - no such variant\r\n        return [buf, buf.length];\r\n      }\r\n      this.events.emit(`displaySuggestionBox`, false);\r\n      return [str, 0];\r\n    }\r\n    if ((arr = this.suggestions[chr.toLowerCase()] || []).length) {\r\n      //nih\r\n      str = this.getSuggestions()[0];\r\n      const foundSuggestions =\r\n        typeof arr == \"string\"\r\n          ? (this.suggestions[str.toLowerCase()] = arr.split(\"\"))\r\n          : arr;\r\n      this.events.emit(`setSuggestions`, foundSuggestions);\r\n      // VirtualKeyboard.IME.setSuggestions((typeof arr =='string')? this.suggestions[str.toLowerCase()]=arr.split('') : arr)\r\n      return [str + chr, 1];\r\n    }\r\n    // ni,\r\n    str = this.getSuggestions()[0];\r\n    this.events.emit(`displaySuggestionBox`, false);\r\n    return [str + (chr.charCodeAt() == 10 ? \"\" : chr), 0];\r\n  }\r\n}\r\n\r\nexport default new CNSuggestions();\r\n","import _ from \"lodash\";\r\nimport \"./Keyboard.css\";\r\n\r\n// Services\r\nimport { getDefaultLayout } from \"../services/KeyboardLayout\";\r\nimport PhysicalKeyboard from \"../services/PhysicalKeyboard\";\r\nimport Utilities from \"../services/Utilities\";\r\nimport CNSuggestions from \"./CNSuggestions\";\r\n\r\n/**\r\n * Root class for simple-keyboard\r\n * This class:\r\n * - Parses the options\r\n * - Renders the rows and buttons\r\n * - Handles button functionality\r\n */\r\nclass SimpleKeyboard {\r\n  /**\r\n   * Creates an instance of SimpleKeyboard\r\n   * @param {Array} params If first parameter is a string, it is considered the container class. The second parameter is then considered the options object. If first parameter is an object, it is considered the options object.\r\n   */\r\n  constructor(...params) {\r\n    const { keyboardDOMClass, keyboardDOM, options = {} } = this.handleParams(\r\n      params\r\n    );\r\n    this.currentWord = \"\";\r\n    this.selectedInput = false;\r\n    this.numberOfSuggestionsPerLine = 10;\r\n    this.currentSuggestionPage = 1;\r\n    this.numberOfSuggestionsPages = 1;\r\n    /**\r\n     * Initializing Utilities\r\n     */\r\n    this.utilities = new Utilities({\r\n      getOptions: this.getOptions,\r\n      getCaretPosition: this.getCaretPosition,\r\n      getCaretPositionEnd: this.getCaretPositionEnd,\r\n      dispatch: this.dispatch\r\n    });\r\n\r\n    /**\r\n     * Caret position\r\n     */\r\n    this.caretPosition = null;\r\n\r\n    /**\r\n     * Caret position end\r\n     */\r\n    this.caretPositionEnd = null;\r\n\r\n    /**\r\n     * Processing options\r\n     */\r\n    this.keyboardDOM = keyboardDOM;\r\n\r\n    /**\r\n     * @type {object}\r\n     * @property {object} layout Modify the keyboard layout.\r\n     * @property {string} layoutName Specifies which layout should be used.\r\n     * @property {object} display Replaces variable buttons (such as {bksp}) with a human-friendly name (e.g.: “backspace”).\r\n     * @property {boolean} mergeDisplay By default, when you set the display property, you replace the default one. This setting merges them instead.\r\n     * @property {string} theme A prop to add your own css classes to the keyboard wrapper. You can add multiple classes separated by a space.\r\n     * @property {array} buttonTheme A prop to add your own css classes to one or several buttons.\r\n     * @property {array} buttonAttributes A prop to add your own attributes to one or several buttons.\r\n     * @property {boolean} debug Runs a console.log every time a key is pressed. Displays the buttons pressed and the current input.\r\n     * @property {boolean} newLineOnEnter Specifies whether clicking the “ENTER” button will input a newline (\\n) or not.\r\n     * @property {boolean} tabCharOnTab Specifies whether clicking the “TAB” button will input a tab character (\\t) or not.\r\n     * @property {string} inputName Allows you to use a single simple-keyboard instance for several inputs.\r\n     * @property {number} maxLength Restrains all of simple-keyboard inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\r\n     * @property {object} maxLength Restrains simple-keyboard’s individual inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\r\n     * @property {boolean} syncInstanceInputs When set to true, this option synchronizes the internal input of every simple-keyboard instance.\r\n     * @property {boolean} physicalKeyboardHighlight Enable highlighting of keys pressed on physical keyboard.\r\n     * @property {boolean} preventMouseDownDefault Calling preventDefault for the mousedown events keeps the focus on the input.\r\n     * @property {boolean} preventMouseUpDefault Calling preventDefault for the mouseup events.\r\n     * @property {boolean} stopMouseDownPropagation Stops pointer down events on simple-keyboard buttons from bubbling to parent elements.\r\n     * @property {boolean} stopMouseUpPropagation Stops pointer up events on simple-keyboard buttons from bubbling to parent elements.\r\n     * @property {string} physicalKeyboardHighlightTextColor Define the text color that the physical keyboard highlighted key should have.\r\n     * @property {string} physicalKeyboardHighlightBgColor Define the background color that the physical keyboard highlighted key should have.\r\n     * @property {function(button: string):string} onKeyPress Executes the callback function on key press. Returns button layout name (i.e.: “{shift}”).\r\n     * @property {function(input: string):string} onChange Executes the callback function on input change. Returns the current input’s string.\r\n     * @property {function} onRender Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\r\n     * @property {function} onInit Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\r\n     * @property {function(inputs: object):object} onChangeAll Executes the callback function on input change. Returns the input object with all defined inputs.\r\n     * @property {boolean} useButtonTag Render buttons as a button element instead of a div element.\r\n     * @property {boolean} disableCaretPositioning A prop to ensure characters are always be added/removed at the end of the string.\r\n     * @property {object} inputPattern Restrains input(s) change to the defined regular expression pattern.\r\n     * @property {boolean} useTouchEvents Instructs simple-keyboard to use touch events instead of click events.\r\n     * @property {boolean} autoUseTouchEvents Enable useTouchEvents automatically when touch device is detected.\r\n     * @property {boolean} useMouseEvents Opt out of PointerEvents handling, falling back to the prior mouse event logic.\r\n     * @property {function} destroy Clears keyboard listeners and DOM elements.\r\n     * @property {boolean} disableButtonHold Disable button hold action.\r\n     * @property {function} onKeyReleased Executes the callback function on key release.\r\n     * @property {array} modules Module classes to be loaded by simple-keyboard.\r\n     */\r\n    this.options = options;\r\n    this.inputLanguage = _.get(this.options, \"defaultLanguage\", \"CN\");\r\n    this.options.layoutName = this.options.layoutName || \"default\";\r\n    this.options.theme = this.options.theme || \"hg-theme-default\";\r\n    this.options.inputName = this.options.inputName || \"default\";\r\n    this.options.preventMouseDownDefault =\r\n      this.options.preventMouseDownDefault || false;\r\n\r\n    /**\r\n     * @type {object} Classes identifying loaded plugins\r\n     */\r\n    this.keyboardPluginClasses = \"\";\r\n\r\n    /**\r\n     * Bindings\r\n     */\r\n    Utilities.bindMethods(SimpleKeyboard, this);\r\n\r\n    /**\r\n     * simple-keyboard uses a non-persistent internal input to keep track of the entered string (the variable `keyboard.input`).\r\n     * This removes any dependency to input DOM elements. You can type and directly display the value in a div element, for example.\r\n     * @example\r\n     * // To get entered input\r\n     * const input = keyboard.getInput();\r\n     *\r\n     * // To clear entered input.\r\n     * keyboard.clearInput();\r\n     *\r\n     * @type {object}\r\n     * @property {object} default Default SimpleKeyboard internal input.\r\n     * @property {object} myInputName Example input that can be set through `options.inputName:\"myInputName\"`.\r\n     */\r\n    this.input = {};\r\n    this.input[this.options.inputName] = \"\";\r\n\r\n    /**\r\n     * @type {string} DOM class of the keyboard wrapper, normally \"simple-keyboard\" by default.\r\n     */\r\n    this.keyboardDOMClass = keyboardDOMClass;\r\n\r\n    /**\r\n     * @type {object} Contains the DOM elements of every rendered button, the key being the button's layout name (e.g.: \"{enter}\").\r\n     */\r\n    this.buttonElements = {};\r\n\r\n    /**\r\n     * Simple-keyboard Instances\r\n     * This enables multiple simple-keyboard support with easier management\r\n     */\r\n    if (!window[\"SimpleKeyboardInstances\"])\r\n      window[\"SimpleKeyboardInstances\"] = {};\r\n\r\n    this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass);\r\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = this;\r\n\r\n    /**\r\n     * Instance vars\r\n     */\r\n    this.allKeyboardInstances = window[\"SimpleKeyboardInstances\"];\r\n    this.keyboardInstanceNames = Object.keys(window[\"SimpleKeyboardInstances\"]);\r\n    this.isFirstKeyboardInstance =\r\n      this.keyboardInstanceNames[0] === this.currentInstanceName;\r\n\r\n    /**\r\n     * Physical Keyboard support\r\n     */\r\n    this.physicalKeyboard = new PhysicalKeyboard({\r\n      dispatch: this.dispatch,\r\n      getOptions: this.getOptions\r\n    });\r\n\r\n    /**\r\n     * Rendering keyboard\r\n     */\r\n    if (this.keyboardDOM) this.render();\r\n    else {\r\n      console.warn(`\".${keyboardDOMClass}\" was not found in the DOM.`);\r\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\r\n    }\r\n\r\n    /**\r\n     * Modules\r\n     */\r\n    this.modules = {};\r\n    this.loadModules();\r\n  }\r\n\r\n  /**\r\n   * parseParams\r\n   */\r\n  handleParams = params => {\r\n    let keyboardDOMClass;\r\n    let keyboardDOM;\r\n    let options;\r\n\r\n    /**\r\n     * If first parameter is a string:\r\n     * Consider it as an element's class\r\n     */\r\n    if (typeof params[0] === \"string\") {\r\n      keyboardDOMClass = params[0].split(\".\").join(\"\");\r\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\r\n      options = params[1];\r\n\r\n      /**\r\n       * If first parameter is an HTMLDivElement\r\n       * Consider it as the keyboard DOM element\r\n       */\r\n    } else if (params[0] instanceof HTMLDivElement) {\r\n      /**\r\n       * This element must have a class, otherwise throw\r\n       */\r\n      if (!params[0].className) {\r\n        console.warn(\"Any DOM element passed as parameter must have a class.\");\r\n        throw new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\r\n      }\r\n\r\n      keyboardDOMClass = params[0].className.split(\" \")[0];\r\n      keyboardDOM = params[0];\r\n      options = params[1];\r\n\r\n      /**\r\n       * Otherwise, search for .simple-keyboard DOM element\r\n       */\r\n    } else {\r\n      keyboardDOMClass = \"simple-keyboard\";\r\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\r\n      options = params[0];\r\n    }\r\n\r\n    return {\r\n      keyboardDOMClass,\r\n      keyboardDOM,\r\n      options\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Getters\r\n   */\r\n  getOptions = () => this.options;\r\n  getCaretPosition = () => this.caretPosition;\r\n  getCaretPositionEnd = () => this.caretPositionEnd;\r\n\r\n  /**\r\n   * Setters\r\n   */\r\n  setCaretPosition(position, endPosition) {\r\n    this.caretPosition = position;\r\n    this.caretPositionEnd = endPosition || position;\r\n  }\r\n\r\n  /**\r\n   * Handles clicks made to keyboard buttons\r\n   * @param  {string} button The button's layout name.\r\n   */\r\n  handleButtonClicked(button) {\r\n    const debug = this.options.debug;\r\n    /**\r\n     * Ignoring placeholder buttons\r\n     */\r\n    if (button === \"{//}\") return false;\r\n\r\n    /**\r\n     * Calling onKeyPress\r\n     */\r\n    if (typeof this.options.onKeyPress === \"function\") {\r\n      this.options.onKeyPress(button);\r\n    } else {\r\n      this.onKeyPress(button);\r\n    }\r\n\r\n    if (!this.input[this.options.inputName])\r\n      this.input[this.options.inputName] = \"\";\r\n\r\n    const updatedInput = this.utilities.getUpdatedInput(\r\n      button,\r\n      this.input[this.options.inputName],\r\n      this.caretPosition,\r\n      this.caretPositionEnd\r\n    );\r\n\r\n    if (\r\n      // If input will change as a result of this button press\r\n      this.input[this.options.inputName] !== updatedInput &&\r\n      // This pertains to the \"inputPattern\" option:\r\n      // If inputPattern isn't set\r\n      (!this.options.inputPattern ||\r\n        // Or, if it is set and if the pattern is valid - we proceed.\r\n        (this.options.inputPattern && this.inputPatternIsValid(updatedInput)))\r\n    ) {\r\n      /**\r\n       * If maxLength and handleMaxLength yield true, halting\r\n       */\r\n      if (\r\n        this.options.maxLength &&\r\n        this.utilities.handleMaxLength(this.input, updatedInput)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      this.input[this.options.inputName] = this.utilities.getUpdatedInput(\r\n        button,\r\n        this.input[this.options.inputName],\r\n        this.caretPosition,\r\n        this.caretPositionEnd,\r\n        true\r\n      );\r\n\r\n      if (debug) console.log(\"Input changed:\", this.input);\r\n\r\n      if (this.options.debug) {\r\n        console.log(\r\n          \"Caret at: \",\r\n          this.getCaretPosition(),\r\n          this.getCaretPositionEnd(),\r\n          `(${this.keyboardDOMClass})`\r\n        );\r\n      }\r\n\r\n      /**\r\n       * Enforce syncInstanceInputs, if set\r\n       */\r\n      if (this.options.syncInstanceInputs) this.syncInstanceInputs();\r\n\r\n      /**\r\n       * Calling onChange\r\n       */\r\n      if (typeof this.options.onChange === \"function\")\r\n        this.options.onChange(this.input[this.options.inputName]);\r\n\r\n      /**\r\n       * Calling onChangeAll\r\n       */\r\n      if (typeof this.options.onChangeAll === \"function\")\r\n        this.options.onChangeAll(this.input);\r\n    }\r\n\r\n    if (debug) {\r\n      console.log(\"Key pressed:\", button);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles button mousedown\r\n   */\r\n  /* istanbul ignore next */\r\n  handleButtonMouseDown(button, e) {\r\n    /**\r\n     * Handle event options\r\n     */\r\n    if (this.options.preventMouseDownDefault) e.preventDefault();\r\n    if (this.options.stopMouseDownPropagation) e.stopPropagation();\r\n\r\n    /**\r\n     * Add active class\r\n     */\r\n    if (e) e.target.classList.add(this.activeButtonClass);\r\n\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n    if (this.holdTimeout) clearTimeout(this.holdTimeout);\r\n\r\n    /**\r\n     * @type {boolean} Whether the mouse is being held onKeyPress\r\n     */\r\n    this.isMouseHold = true;\r\n\r\n    /**\r\n     * @type {object} Time to wait until a key hold is detected\r\n     */\r\n    if (!this.options.disableButtonHold) {\r\n      this.holdTimeout = setTimeout(() => {\r\n        if (\r\n          (this.isMouseHold &&\r\n            // TODO: This needs to be configurable through options\r\n            ((!button.includes(\"{\") && !button.includes(\"}\")) ||\r\n              button === \"{delete}\" ||\r\n              button === \"{backspace}\" ||\r\n              button === \"{bksp}\" ||\r\n              button === \"{space}\" ||\r\n              button === \"{tab}\")) ||\r\n          button === \"{arrowright}\" ||\r\n          button === \"{arrowleft}\" ||\r\n          button === \"{arrowup}\" ||\r\n          button === \"{arrowdown}\"\r\n        ) {\r\n          if (this.options.debug) console.log(\"Button held:\", button);\r\n\r\n          this.handleButtonHold(button, e);\r\n        }\r\n        clearTimeout(this.holdTimeout);\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles button mouseup\r\n   */\r\n  handleButtonMouseUp(button = null, e = null) {\r\n    if (e) {\r\n      /**\r\n       * Handle event options\r\n       */\r\n      if (this.options.preventMouseUpDefault) e.preventDefault();\r\n      if (this.options.stopMouseUpPropagation) e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Remove active class\r\n     */\r\n    this.recurseButtons(buttonElement => {\r\n      buttonElement.classList.remove(this.activeButtonClass);\r\n    });\r\n\r\n    this.isMouseHold = false;\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n\r\n    /**\r\n     * Calling onKeyReleased\r\n     */\r\n    if (button && typeof this.options.onKeyReleased === \"function\")\r\n      this.options.onKeyReleased(button);\r\n  }\r\n\r\n  /**\r\n   * Handles container mousedown\r\n   */\r\n  handleKeyboardContainerMouseDown(e) {\r\n    /**\r\n     * Handle event options\r\n     */\r\n    if (this.options.preventMouseDownDefault) e.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Handles button hold\r\n   */\r\n  /* istanbul ignore next */\r\n  handleButtonHold(button) {\r\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\r\n\r\n    /**\r\n     * @type {object} Timeout dictating the speed of key hold iterations\r\n     */\r\n    this.holdInteractionTimeout = setTimeout(() => {\r\n      if (this.isMouseHold) {\r\n        this.handleButtonClicked(button);\r\n        this.handleButtonHold(button);\r\n      } else {\r\n        clearTimeout(this.holdInteractionTimeout);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Send a command to all simple-keyboard instances (if you have several instances).\r\n   */\r\n  syncInstanceInputs() {\r\n    this.dispatch(instance => {\r\n      instance.replaceInput(this.input);\r\n      instance.setCaretPosition(this.caretPosition, this.caretPositionEnd);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the keyboard’s input.\r\n   * @param {string} [inputName] optional - the internal input to select\r\n   */\r\n  clearInput(inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[inputName] = \"\";\r\n\r\n    /**\r\n     * Reset caretPosition\r\n     */\r\n    this.setCaretPosition(0);\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\r\n  }\r\n\r\n  /**\r\n   * Get the keyboard’s input (You can also get it from the onChange prop).\r\n   * @param  {string} [inputName] optional - the internal input to select\r\n   */\r\n  getInput(inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\r\n\r\n    return this.input[inputName];\r\n  }\r\n\r\n  /**\r\n   * Set the keyboard’s input.\r\n   * @param  {string} input the input value\r\n   * @param  {string} inputName optional - the internal input to select\r\n   */\r\n  setInput(input, inputName) {\r\n    inputName = inputName || this.options.inputName;\r\n    this.input[inputName] = input;\r\n\r\n    /**\r\n     * Enforce syncInstanceInputs, if set\r\n     */\r\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\r\n  }\r\n\r\n  /**\r\n   * Replace the input object (`keyboard.input`)\r\n   * @param  {object} inputObj The input object\r\n   */\r\n  replaceInput(inputObj) {\r\n    this.input = inputObj;\r\n  }\r\n\r\n  /**\r\n   * Set new option or modify existing ones after initialization.\r\n   * @param  {object} options The options to set\r\n   */\r\n  setOptions(options = {}) {\r\n    const changedOptions = this.changedOptions(options);\r\n    this.options = Object.assign(this.options, options);\r\n\r\n    if (changedOptions.length) {\r\n      if (this.options.debug) {\r\n        console.log(\"changedOptions\", changedOptions);\r\n      }\r\n\r\n      /**\r\n       * Some option changes require adjustments before re-render\r\n       */\r\n      this.onSetOptions(options);\r\n\r\n      /**\r\n       * Rendering\r\n       */\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detecting changes to non-function options\r\n   * This allows us to ascertain whether a button re-render is needed\r\n   */\r\n  changedOptions(newOptions) {\r\n    return Object.keys(newOptions).filter(\r\n      optionName =>\r\n        JSON.stringify(newOptions[optionName]) !==\r\n        JSON.stringify(this.options[optionName])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Executing actions depending on changed options\r\n   * @param  {object} options The options to set\r\n   */\r\n  onSetOptions(options) {\r\n    if (options.inputName) {\r\n      /**\r\n       * inputName changed. This requires a caretPosition reset\r\n       */\r\n      if (this.options.debug) {\r\n        console.log(\"inputName changed. caretPosition reset.\");\r\n      }\r\n      this.setCaretPosition(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all keyboard rows and reset keyboard values.\r\n   * Used internally between re-renders.\r\n   */\r\n  clear() {\r\n    this.keyboardDOM.innerHTML = \"\";\r\n    this.keyboardDOM.className = this.keyboardDOMClass;\r\n    this.buttonElements = {};\r\n  }\r\n\r\n  /**\r\n   * Send a command to all simple-keyboard instances at once (if you have multiple instances).\r\n   * @param  {function(instance: object, key: string)} callback Function to run on every instance\r\n   */\r\n  dispatch(callback) {\r\n    if (!window[\"SimpleKeyboardInstances\"]) {\r\n      console.warn(\r\n        `SimpleKeyboardInstances is not defined. Dispatch cannot be called.`\r\n      );\r\n      throw new Error(\"INSTANCES_VAR_ERROR\");\r\n    }\r\n\r\n    return Object.keys(window[\"SimpleKeyboardInstances\"]).forEach(key => {\r\n      callback(window[\"SimpleKeyboardInstances\"][key], key);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds/Modifies an entry to the `buttonTheme`. Basically a way to add a class to a button.\r\n   * @param  {string} buttons List of buttons to select (separated by a space).\r\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\r\n   */\r\n  addButtonTheme(buttons, className) {\r\n    if (!className || !buttons) return false;\r\n\r\n    buttons.split(\" \").forEach(button => {\r\n      className.split(\" \").forEach(classNameItem => {\r\n        if (!this.options.buttonTheme) this.options.buttonTheme = [];\r\n\r\n        let classNameFound = false;\r\n\r\n        /**\r\n         * If class is already defined, we add button to class definition\r\n         */\r\n        this.options.buttonTheme.map(buttonTheme => {\r\n          if (buttonTheme.class.split(\" \").includes(classNameItem)) {\r\n            classNameFound = true;\r\n\r\n            const buttonThemeArray = buttonTheme.buttons.split(\" \");\r\n            if (!buttonThemeArray.includes(button)) {\r\n              classNameFound = true;\r\n              buttonThemeArray.push(button);\r\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\r\n            }\r\n          }\r\n          return buttonTheme;\r\n        });\r\n\r\n        /**\r\n         * If class is not defined, we create a new entry\r\n         */\r\n        if (!classNameFound) {\r\n          this.options.buttonTheme.push({\r\n            class: classNameItem,\r\n            buttons: buttons\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Removes/Amends an entry to the `buttonTheme`. Basically a way to remove a class previously added to a button through buttonTheme or addButtonTheme.\r\n   * @param  {string} buttons List of buttons to select (separated by a space).\r\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\r\n   */\r\n  removeButtonTheme(buttons, className) {\r\n    /**\r\n     * When called with empty parameters, remove all button themes\r\n     */\r\n    if (!buttons && !className) {\r\n      this.options.buttonTheme = [];\r\n      this.render();\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * If buttons are passed and buttonTheme has items\r\n     */\r\n    if (\r\n      buttons &&\r\n      Array.isArray(this.options.buttonTheme) &&\r\n      this.options.buttonTheme.length\r\n    ) {\r\n      const buttonArray = buttons.split(\" \");\r\n      buttonArray.forEach(button => {\r\n        this.options.buttonTheme.map((buttonTheme, index) => {\r\n          /**\r\n           * If className is set, we affect the buttons only for that class\r\n           * Otherwise, we afect all classes\r\n           */\r\n          if (\r\n            (className && className.includes(buttonTheme.class)) ||\r\n            !className\r\n          ) {\r\n            const filteredButtonArray = buttonTheme.buttons\r\n              .split(\" \")\r\n              .filter(item => item !== button);\r\n\r\n            /**\r\n             * If buttons left, return them, otherwise, remove button Theme\r\n             */\r\n            if (filteredButtonArray.length) {\r\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\r\n            } else {\r\n              this.options.buttonTheme.splice(index, 1);\r\n              buttonTheme = null;\r\n            }\r\n          }\r\n\r\n          return buttonTheme;\r\n        });\r\n      });\r\n\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the DOM Element of a button. If there are several buttons with the same name, an array of the DOM Elements is returned.\r\n   * @param  {string} button The button layout name to select\r\n   */\r\n  getButtonElement(button) {\r\n    let output;\r\n\r\n    const buttonArr = this.buttonElements[button];\r\n    if (buttonArr) {\r\n      if (buttonArr.length > 1) {\r\n        output = buttonArr;\r\n      } else {\r\n        output = buttonArr[0];\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * This handles the \"inputPattern\" option\r\n   * by checking if the provided inputPattern passes\r\n   */\r\n  inputPatternIsValid(inputVal) {\r\n    const inputPatternRaw = this.options.inputPattern;\r\n    let inputPattern;\r\n\r\n    /**\r\n     * Check if input pattern is global or targeted to individual inputs\r\n     */\r\n    if (inputPatternRaw instanceof RegExp) {\r\n      inputPattern = inputPatternRaw;\r\n    } else {\r\n      inputPattern = inputPatternRaw[this.options.inputName];\r\n    }\r\n\r\n    if (inputPattern && inputVal) {\r\n      const didInputMatch = inputPattern.test(inputVal);\r\n\r\n      if (this.options.debug) {\r\n        console.log(\r\n          `inputPattern (\"${inputPattern}\"): ${\r\n            didInputMatch ? \"passed\" : \"did not pass!\"\r\n          }`\r\n        );\r\n      }\r\n\r\n      return didInputMatch;\r\n    } else {\r\n      /**\r\n       * inputPattern doesn't seem to be set for the current input, or input is empty. Pass.\r\n       */\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles simple-keyboard event listeners\r\n   */\r\n  setEventListeners() {\r\n    /**\r\n     * Only first instance should set the event listeners\r\n     */\r\n    if (this.isFirstKeyboardInstance || !this.allKeyboardInstances) {\r\n      if (this.options.debug) {\r\n        console.log(`Caret handling started (${this.keyboardDOMClass})`);\r\n      }\r\n\r\n      /**\r\n       * Event Listeners\r\n       */\r\n      document.addEventListener(\"keyup\", this.handleKeyUp);\r\n      document.addEventListener(\"keydown\", this.handleKeyDown);\r\n      document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n      document.addEventListener(\"touchend\", this.handleTouchEnd);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event Handler: KeyUp\r\n   */\r\n  handleKeyUp(event) {\r\n    this.caretEventHandler(event);\r\n\r\n    if (this.options.physicalKeyboardHighlight) {\r\n      this.physicalKeyboard.handleHighlightKeyUp(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event Handler: KeyDown\r\n   */\r\n  handleKeyDown(event) {\r\n    if (this.options.physicalKeyboardHighlight) {\r\n      this.physicalKeyboard.handleHighlightKeyDown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event Handler: MouseUp\r\n   */\r\n  handleMouseUp(event) {\r\n    this.caretEventHandler(event);\r\n  }\r\n\r\n  /**\r\n   * Event Handler: TouchEnd\r\n   */\r\n  /* istanbul ignore next */\r\n  handleTouchEnd(event) {\r\n    this.caretEventHandler(event);\r\n  }\r\n\r\n  /**\r\n   * Called by {@link setEventListeners} when an event that warrants a cursor position update is triggered\r\n   */\r\n  caretEventHandler(event) {\r\n    let targetTagName;\r\n    if (event.target.tagName) {\r\n      targetTagName = event.target.tagName.toLowerCase();\r\n    }\r\n\r\n    this.dispatch(instance => {\r\n      const isKeyboard =\r\n        event.target === instance.keyboardDOM ||\r\n        (event.target && instance.keyboardDOM.contains(event.target));\r\n\r\n      if (instance.isMouseHold) {\r\n        instance.isMouseHold = false;\r\n      }\r\n\r\n      if (\r\n        (targetTagName === \"textarea\" || targetTagName === \"input\") &&\r\n        !instance.options.disableCaretPositioning\r\n      ) {\r\n        /**\r\n         * Tracks current cursor position\r\n         * As keys are pressed, text will be added/removed at that position within the input.\r\n         */\r\n        instance.setCaretPosition(\r\n          event.target.selectionStart,\r\n          event.target.selectionEnd\r\n        );\r\n\r\n        if (instance.options.debug) {\r\n          console.log(\r\n            \"Caret at: \",\r\n            instance.getCaretPosition(),\r\n            instance.getCaretPositionEnd(),\r\n            event && event.target.tagName.toLowerCase(),\r\n            `(${instance.keyboardDOMClass})`\r\n          );\r\n        }\r\n      } else if (instance.options.disableCaretPositioning || !isKeyboard) {\r\n        /**\r\n         * If we toggled off disableCaretPositioning, we must ensure caretPosition doesn't persist once reactivated.\r\n         */\r\n        instance.setCaretPosition(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Execute an operation on each button\r\n   */\r\n  recurseButtons(fn) {\r\n    if (!fn) return false;\r\n\r\n    Object.keys(this.buttonElements).forEach(buttonName =>\r\n      this.buttonElements[buttonName].forEach(fn)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy keyboard listeners and DOM elements\r\n   */\r\n  destroy() {\r\n    if (this.options.debug)\r\n      console.log(\r\n        `Destroying simple-keyboard instance: ${this.currentInstanceName}`\r\n      );\r\n\r\n    /**\r\n     * Remove document listeners\r\n     */\r\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n    document.removeEventListener(\"touchend\", this.handleTouchEnd);\r\n    document.onpointerup = null;\r\n    document.ontouchend = null;\r\n    document.ontouchcancel = null;\r\n    document.onmouseup = null;\r\n\r\n    /**\r\n     * Remove buttons\r\n     */\r\n    let deleteButton = buttonElement => {\r\n      buttonElement.onpointerdown = null;\r\n      buttonElement.onpointerup = null;\r\n      buttonElement.onpointercancel = null;\r\n      buttonElement.ontouchstart = null;\r\n      buttonElement.ontouchend = null;\r\n      buttonElement.ontouchcancel = null;\r\n      buttonElement.onclick = null;\r\n      buttonElement.onmousedown = null;\r\n      buttonElement.onmouseup = null;\r\n\r\n      buttonElement.remove();\r\n      buttonElement = null;\r\n    };\r\n\r\n    this.recurseButtons(deleteButton);\r\n\r\n    this.recurseButtons = null;\r\n    deleteButton = null;\r\n\r\n    /**\r\n     * Remove wrapper events\r\n     */\r\n    this.keyboardDOM.onpointerdown = null;\r\n    this.keyboardDOM.ontouchstart = null;\r\n    this.keyboardDOM.onmousedown = null;\r\n\r\n    /**\r\n     * Clearing keyboard wrapper\r\n     */\r\n    this.clear();\r\n\r\n    /**\r\n     * Remove instance\r\n     */\r\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = null;\r\n    delete window[\"SimpleKeyboardInstances\"][this.currentInstanceName];\r\n\r\n    /**\r\n     * Reset initialized flag\r\n     */\r\n    this.initialized = false;\r\n  }\r\n\r\n  /**\r\n   * Process buttonTheme option\r\n   */\r\n  getButtonThemeClasses(button) {\r\n    const buttonTheme = this.options.buttonTheme;\r\n    let buttonClasses = [];\r\n\r\n    if (Array.isArray(buttonTheme)) {\r\n      buttonTheme.forEach(themeObj => {\r\n        if (\r\n          themeObj.class &&\r\n          typeof themeObj.class === \"string\" &&\r\n          themeObj.buttons &&\r\n          typeof themeObj.buttons === \"string\"\r\n        ) {\r\n          const themeObjClasses = themeObj.class.split(\" \");\r\n          const themeObjButtons = themeObj.buttons.split(\" \");\r\n\r\n          if (themeObjButtons.includes(button)) {\r\n            buttonClasses = [...buttonClasses, ...themeObjClasses];\r\n          }\r\n        } else {\r\n          console.warn(\r\n            `Incorrect \"buttonTheme\". Please check the documentation.`,\r\n            themeObj\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    return buttonClasses;\r\n  }\r\n\r\n  /**\r\n   * Process buttonAttributes option\r\n   */\r\n  setDOMButtonAttributes(button, callback) {\r\n    const buttonAttributes = this.options.buttonAttributes;\r\n\r\n    if (Array.isArray(buttonAttributes)) {\r\n      buttonAttributes.forEach(attrObj => {\r\n        if (\r\n          attrObj.attribute &&\r\n          typeof attrObj.attribute === \"string\" &&\r\n          attrObj.value &&\r\n          typeof attrObj.value === \"string\" &&\r\n          attrObj.buttons &&\r\n          typeof attrObj.buttons === \"string\"\r\n        ) {\r\n          const attrObjButtons = attrObj.buttons.split(\" \");\r\n\r\n          if (attrObjButtons.includes(button)) {\r\n            callback(attrObj.attribute, attrObj.value);\r\n          }\r\n        } else {\r\n          console.warn(\r\n            `Incorrect \"buttonAttributes\". Please check the documentation.`,\r\n            attrObj\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getSelectedInput() {\r\n    return this.selectedInput || \".input\";\r\n  }\r\n\r\n  onTouchDeviceDetected() {\r\n    /**\r\n     * Processing autoTouchEvents\r\n     */\r\n    this.processAutoTouchEvents();\r\n\r\n    /**\r\n     * Disabling contextual window on touch devices\r\n     */\r\n    this.disableContextualWindow();\r\n  }\r\n\r\n  /**\r\n   * Disabling contextual window for hg-button\r\n   */\r\n  /* istanbul ignore next */\r\n  disableContextualWindow() {\r\n    window.oncontextmenu = event => {\r\n      if (event.target.classList.contains(\"hg-button\")) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Process autoTouchEvents option\r\n   */\r\n  processAutoTouchEvents() {\r\n    if (this.options.autoUseTouchEvents) {\r\n      this.options.useTouchEvents = true;\r\n\r\n      if (this.options.debug) {\r\n        console.log(\r\n          `autoUseTouchEvents: Touch device detected, useTouchEvents enabled.`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\r\n   */\r\n  onInit() {\r\n    if (this.options.debug) {\r\n      console.log(`${this.keyboardDOMClass} Initialized`);\r\n    }\r\n\r\n    /**\r\n     * setEventListeners\r\n     */\r\n    this.setEventListeners();\r\n\r\n    if (typeof this.options.onInit === \"function\") this.options.onInit();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function before a simple-keyboard render.\r\n   */\r\n  beforeFirstRender() {\r\n    /**\r\n     * Performing actions when touch device detected\r\n     */\r\n    if (this.utilities.isTouchDevice()) {\r\n      this.onTouchDeviceDetected();\r\n    }\r\n\r\n    if (typeof this.options.beforeFirstRender === \"function\")\r\n      this.options.beforeFirstRender();\r\n\r\n    /**\r\n     * Notify about PointerEvents usage\r\n     */\r\n    if (\r\n      this.isFirstKeyboardInstance &&\r\n      this.utilities.pointerEventsSupported() &&\r\n      !this.options.useTouchEvents &&\r\n      !this.options.useMouseEvents\r\n    ) {\r\n      if (this.options.debug) {\r\n        console.log(\"Using PointerEvents as it is supported by this browser\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Notify about touch events usage\r\n     */\r\n    if (this.options.useTouchEvents) {\r\n      if (this.options.debug) {\r\n        console.log(\r\n          \"useTouchEvents has been enabled. Only touch events will be used.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function before a simple-keyboard render.\r\n   */\r\n  beforeRender() {\r\n    if (typeof this.options.beforeRender === \"function\")\r\n      this.options.beforeRender();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\r\n   */\r\n  onRender() {\r\n    if (typeof this.options.onRender === \"function\") this.options.onRender();\r\n  }\r\n\r\n  /**\r\n   * Executes the callback function once all modules have been loaded\r\n   */\r\n  onModulesLoaded() {\r\n    if (typeof this.options.onModulesLoaded === \"function\")\r\n      this.options.onModulesLoaded(this);\r\n  }\r\n\r\n  /**\r\n   * Register module\r\n   */\r\n  registerModule = (name, initCallback) => {\r\n    if (!this.modules[name]) this.modules[name] = {};\r\n\r\n    initCallback(this.modules[name]);\r\n  };\r\n\r\n  /**\r\n   * Load modules\r\n   */\r\n  loadModules() {\r\n    if (Array.isArray(this.options.modules)) {\r\n      this.options.modules.forEach(KeyboardModule => {\r\n        const keyboardModule = new KeyboardModule();\r\n\r\n        /* istanbul ignore next */\r\n        if (\r\n          keyboardModule.constructor.name &&\r\n          keyboardModule.constructor.name !== \"Function\"\r\n        ) {\r\n          const classStr = `module-${this.utilities.camelCase(\r\n            keyboardModule.constructor.name\r\n          )}`;\r\n          this.keyboardPluginClasses =\r\n            this.keyboardPluginClasses + ` ${classStr}`;\r\n        }\r\n\r\n        keyboardModule.init(this);\r\n      });\r\n\r\n      this.keyboardPluginClasses =\r\n        this.keyboardPluginClasses + \" modules-loaded\";\r\n\r\n      this.render();\r\n      this.onModulesLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get module prop\r\n   */\r\n  getModuleProp(name, prop) {\r\n    if (!this.modules[name]) return false;\r\n\r\n    return this.modules[name][prop];\r\n  }\r\n\r\n  /**\r\n   * getModulesList\r\n   */\r\n  getModulesList() {\r\n    return Object.keys(this.modules);\r\n  }\r\n\r\n  /**\r\n   * Parse Row DOM containers\r\n   */\r\n  parseRowDOMContainers(\r\n    rowDOM,\r\n    rowIndex,\r\n    containerStartIndexes,\r\n    containerEndIndexes\r\n  ) {\r\n    const rowDOMArray = Array.from(rowDOM.children);\r\n    let removedElements = 0;\r\n\r\n    if (rowDOMArray.length) {\r\n      containerStartIndexes.forEach((startIndex, arrIndex) => {\r\n        const endIndex = containerEndIndexes[arrIndex];\r\n\r\n        /**\r\n         * If there exists a respective end index\r\n         * if end index comes after start index\r\n         */\r\n        if (!endIndex || !(endIndex > startIndex)) {\r\n          return false;\r\n        }\r\n\r\n        /**\r\n         * Updated startIndex, endIndex\r\n         * This is since the removal of buttons to place a single button container\r\n         * results in a modified array size\r\n         */\r\n        const updated_startIndex = startIndex - removedElements;\r\n        const updated_endIndex = endIndex - removedElements;\r\n\r\n        /**\r\n         * Create button container\r\n         */\r\n        const containerDOM = document.createElement(\"div\");\r\n        containerDOM.className += \"hg-button-container\";\r\n        const containerUID = `${this.options.layoutName}-r${rowIndex}c${arrIndex}`;\r\n        containerDOM.setAttribute(\"data-skUID\", containerUID);\r\n\r\n        /**\r\n         * Taking elements due to be inserted into container\r\n         */\r\n        const containedElements = rowDOMArray.splice(\r\n          updated_startIndex,\r\n          updated_endIndex - updated_startIndex + 1\r\n        );\r\n        removedElements = updated_endIndex - updated_startIndex;\r\n\r\n        /**\r\n         * Inserting elements to container\r\n         */\r\n        containedElements.forEach(element => containerDOM.appendChild(element));\r\n\r\n        /**\r\n         * Adding container at correct position within rowDOMArray\r\n         */\r\n        rowDOMArray.splice(updated_startIndex, 0, containerDOM);\r\n\r\n        /**\r\n         * Clearing old rowDOM children structure\r\n         */\r\n        rowDOM.innerHTML = \"\";\r\n\r\n        /**\r\n         * Appending rowDOM new children list\r\n         */\r\n        rowDOMArray.forEach(element => rowDOM.appendChild(element));\r\n\r\n        if (this.options.debug) {\r\n          console.log(\r\n            \"rowDOMContainer\",\r\n            containedElements,\r\n            updated_startIndex,\r\n            updated_endIndex,\r\n            removedElements + 1\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    return rowDOM;\r\n  }\r\n\r\n  /**\r\n   * getKeyboardClassString\r\n   */\r\n  getKeyboardClassString = (...baseDOMClasses) => {\r\n    const keyboardClasses = [this.keyboardDOMClass, ...baseDOMClasses].filter(\r\n      DOMClass => !!DOMClass\r\n    );\r\n\r\n    return keyboardClasses.join(\" \");\r\n  };\r\n\r\n  setPinyinPreview(pinyin) {\r\n    this.previewPinyin.innerHTML = pinyin;\r\n    if (pinyin.length === 0) {\r\n      this.setSuggestions([]);\r\n      this.hideSuggestions();\r\n      // console.warn(\"will empty the pinyin preview\");\r\n      // } else {\r\n      //   console.warn(`setPinyinPreview - `, pinyin);\r\n    }\r\n    this.setCurrentWord(pinyin);\r\n  }\r\n\r\n  isAlphabetical(char) {\r\n    return char.match(/^[a-zA-Z]+$/);\r\n  }\r\n\r\n  convertInputToKeyboardKey(input) {\r\n    if (input === \" \" || input === \"\") {\r\n      return `{space}`;\r\n    }\r\n    if (input === \"Backspace\" || input === \"Delete\") {\r\n      return `{bksp}`;\r\n    }\r\n    if (input === \"Control\") {\r\n      return `{ctrl}`;\r\n    }\r\n    if (input === \"Shift\") {\r\n      return `{shift}`;\r\n    }\r\n    if (input === \"CapsLock\") {\r\n      return `{lock}`;\r\n    }\r\n    if (input === \"Enter\") {\r\n      return `{enter}`;\r\n    }\r\n    if (input === \"Alt\") {\r\n      return `{alt}`;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  toggleLanguage() {\r\n    this.inputLanguage = this.inputLanguage === \"EN\" ? \"CN\" : \"EN\";\r\n    this.clearInput();\r\n    this.setCurrentWord(\"\");\r\n    this.setPinyinPreview(\"\");\r\n  }\r\n\r\n  handleLangKey() {\r\n    this.toggleLanguage();\r\n    this.setOptions({\r\n      display: {\r\n        \"{lang}\": this.inputLanguage\r\n      }\r\n    });\r\n  }\r\n\r\n  handleShift() {\r\n    const currentLayout = this.options.layoutName;\r\n    this.setOptions({\r\n      layoutName: currentLayout === \"default\" ? \"shift\" : \"default\"\r\n    });\r\n  }\r\n\r\n  getCurrentInputMethod() {\r\n    // NOTE: If we are in EN or in CN but with the caps lock active\r\n    return this.inputLanguage === \"EN\" ||\r\n      (this.inputLanguage === \"CN\" && this.options.layoutName === \"shift\")\r\n      ? \"EN\"\r\n      : \"CN\";\r\n  }\r\n\r\n  setCurrentWord(word) {\r\n    this.currentWord = _.join(\r\n      _.filter(word, char => this.isAlphabetical(char)),\r\n      \"\"\r\n    );\r\n    // console.log(`current word is now: ${this.currentWord}`);\r\n  }\r\n\r\n  toggleExpandSuggestionsBtn(display) {\r\n    if (display) {\r\n      this.expandSuggestionsBtn.classList.add(`displayed`);\r\n      this.suggestionAreaDOM.classList.add(`has-more`);\r\n    } else {\r\n      this.expandSuggestionsBtn.classList.remove(`displayed`);\r\n      this.suggestionAreaDOM.classList.remove(`has-more`);\r\n    }\r\n  }\r\n\r\n  toggleMoreSuggestionsArea() {\r\n    if (_.includes(this.suggestionAreaDOM.classList, `expanded`)) {\r\n      this.suggestionAreaDOM.classList.remove(`expanded`);\r\n      return;\r\n    }\r\n    if (this.suggestions.length > this.numberOfSuggestionsPerLine) {\r\n      this.suggestionAreaDOM.classList.add(`expanded`);\r\n    }\r\n  }\r\n\r\n  updateNumberOfSuggestionPages() {\r\n    this.numberOfSuggestionsPages = this.suggestions\r\n      ? Math.floor(this.suggestions.length / this.numberOfSuggestionsPerLine) -\r\n        2\r\n      : 1;\r\n  }\r\n\r\n  setCNSuggestionsListeners() {\r\n    CNSuggestions.events.on(`displaySuggestionBox`, suggestions => {\r\n      if (!suggestions) {\r\n        this.setSuggestions([]);\r\n        return this.hideSuggestions();\r\n      }\r\n      this.setSuggestions(suggestions);\r\n      this.showSuggestions();\r\n    });\r\n    CNSuggestions.events.on(`setSuggestions`, suggestions => {\r\n      this.setSuggestions(suggestions);\r\n    });\r\n  }\r\n\r\n  keydownListener(event) {\r\n    // NOTE: If we are in CN or if a special key has been typed\r\n    if (\r\n      (this.getCurrentInputMethod() === \"CN\" || event.key.length > 1) &&\r\n      event.preventDefault\r\n    ) {\r\n      event.preventDefault();\r\n      this.handleButtonClicked(\r\n        this.convertInputToKeyboardKey(event.key || `{bksp}`)\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n\r\n  initKeydownListener() {\r\n    document.addEventListener(\"keydown\", this.keydownListener);\r\n  }\r\n\r\n  handleSpaceKey(button = false) {\r\n    const buttonIsANumberKey = _.isNumber(_.toNumber(button));\r\n    if (button === `{enter}`) {\r\n      this.enterSuggestedWord(this.previewPinyin.innerHTML);\r\n    } else if (\r\n      this.suggestionAreaDOM.firstElementChild &&\r\n      this.suggestionAreaDOM.firstElementChild.firstElementChild &&\r\n      !buttonIsANumberKey\r\n    ) {\r\n      this.enterSuggestedWord(\r\n        this.suggestionAreaDOM.firstElementChild.firstElementChild.innerHTML\r\n      );\r\n      if (button === `{space}`) {\r\n        return;\r\n      }\r\n    }\r\n    if (button && button !== `{space}` && button !== `{enter}`) {\r\n      this.previewPinyin.innerHTML = `${this.previewPinyin.innerHTML}${button}`;\r\n    }\r\n    if (this.previewPinyin.innerHTML.length > 0) {\r\n      if (button === `{space}`) {\r\n        if (\r\n          this.suggestionAreaDOM.firstElementChild.firstElementChild.innerHTML\r\n            .length > 0\r\n        ) {\r\n          this.enterSuggestedWord(\r\n            this.suggestionAreaDOM.firstElementChild.firstElementChild.innerHTML\r\n          );\r\n        } else {\r\n          this.enterSuggestedWord(`${this.previewPinyin.innerHTML} `);\r\n        }\r\n      } else {\r\n        this.enterSuggestedWord(\r\n          this.previewPinyin.innerHTML,\r\n          buttonIsANumberKey ? button : false\r\n        );\r\n      }\r\n    } else if (button !== `{enter}`) {\r\n      console.log(\"will add a space\");\r\n      this.enterSuggestedWord(\" \");\r\n    }\r\n    return this.setPinyinPreview(\"\");\r\n  }\r\n\r\n  findSuggestions(button) {\r\n    return CNSuggestions.charProcessor(button, _.trim(this.currentWord));\r\n  }\r\n\r\n  inputEventListener(event) {\r\n    console.warn(\"received input event -\", event);\r\n    event.target.readOnly = this.getCurrentInputMethod() === \"CN\";\r\n    if (event.target.readOnly) {\r\n      this.handleButtonClicked(event.data || `{bksp}`);\r\n      if (event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      return false;\r\n    }\r\n\r\n    this.setInput(event.target.value, event.target.id);\r\n  }\r\n\r\n  onInputFocus(event) {\r\n    this.selectedInput = `#${event.target.id}`;\r\n    this.setOptions({\r\n      inputName: event.target.id\r\n    });\r\n  }\r\n\r\n  onKeyPress(button) {\r\n    console.log(\"Button pressed\", button);\r\n    if (button === \"{lang}\") {\r\n      return this.handleLangKey();\r\n    }\r\n    if (button === \"{shift}\" || button === \"{lock}\") {\r\n      return this.handleShift();\r\n    }\r\n    if (this.getCurrentInputMethod() === \"CN\") {\r\n      return this.handleCNKeyPress(button);\r\n    }\r\n    if (button === `{space}`) {\r\n      return this.enterSuggestedWord(\" \");\r\n    }\r\n    if (button === `{bksp}`) {\r\n      return this.handleBackspace();\r\n    }\r\n    this.enterSuggestedWord(button);\r\n  }\r\n\r\n  onSuggestedWordClicked(suggestedWord) {\r\n    // console.warn(\"onSuggestedWordClicked - \", suggestedWord);\r\n    const selectedInput = this.getSelectedInput();\r\n    const inputVal = document.querySelector(selectedInput).value;\r\n    document.querySelector(selectedInput).value = `${inputVal}${suggestedWord}`;\r\n  }\r\n\r\n  onChange(input) {\r\n    const inputElem = document.querySelector(this.getSelectedInput());\r\n    const currentInputMethod = this.getCurrentInputMethod();\r\n    if (currentInputMethod === \"EN\") {\r\n      // console.log(\"Input changed - before\", inputElem.value);\r\n      inputElem.value = input;\r\n      // console.log(\"Input changed - after\", inputElem.value);\r\n    } else if (input.length > 1 && this.isAlphabetical(_.last(input))) {\r\n      this.setCurrentWord(input);\r\n      this.setPinyinPreview(this.currentWord);\r\n    }\r\n  }\r\n\r\n  handleBackspace() {\r\n    const selectedInput = this.getSelectedInput();\r\n    document.querySelector(selectedInput).value = document\r\n      .querySelector(selectedInput)\r\n      .value.slice(0, -1);\r\n    return;\r\n  }\r\n\r\n  handleCNKeyPress(button) {\r\n    if (button === `{ctrl}` || button === `{alt}`) {\r\n      return console.log(`Key ignored`);\r\n    }\r\n    if (\r\n      button !== `{bksp}` &&\r\n      (button === \"{space}\" ||\r\n        button === \"{enter}\" ||\r\n        !this.isAlphabetical(button))\r\n    ) {\r\n      return this.handleSpaceKey(button);\r\n    }\r\n    // console.log(\"current word: ---\", this.currentWord);\r\n    const foundSuggestions = this.findSuggestions(button);\r\n    if (button === `{bksp}` && this.previewPinyin.innerHTML.length === 0) {\r\n      this.handleBackspace();\r\n      return;\r\n    }\r\n    this.setPinyinPreview(_.trim(_.first(foundSuggestions)));\r\n  }\r\n\r\n  setSuggestions(suggestions) {\r\n    const suggestionsList = this.suggestionAreaDOM.firstElementChild;\r\n    suggestionsList.innerHTML = \"\";\r\n    this.suggestions = suggestions;\r\n    this.currentSuggestionPage = 1;\r\n    this.updateSuggestionPagesMenu();\r\n    if (\r\n      !suggestions ||\r\n      (suggestions && suggestions.length <= this.numberOfSuggestionsPerLine)\r\n    ) {\r\n      this.toggleExpandSuggestionsBtn(false);\r\n    } else if (suggestions) {\r\n      this.toggleExpandSuggestionsBtn(\r\n        suggestionsList.length > this.numberOfSuggestionsPerLine\r\n      );\r\n    }\r\n    _.forEach(suggestions, (suggestion, key) => {\r\n      const suggestionElem = document.createElement(\"li\");\r\n      suggestionElem.innerHTML = suggestion;\r\n      suggestionElem.onclick = () => {\r\n        console.warn(\"word clicked !\", suggestion);\r\n        this.enterSuggestedWord(suggestion);\r\n      };\r\n      suggestionsList.appendChild(suggestionElem);\r\n      if (key === this.numberOfSuggestionsPerLine) {\r\n        this.toggleExpandSuggestionsBtn(true);\r\n      }\r\n    });\r\n    if (suggestions) {\r\n      this.nbSuggestionsPages =\r\n        suggestions.length / this.numberOfSuggestionsPerLine;\r\n      let missingElementsOnLastLine =\r\n        this.numberOfSuggestionsPerLine -\r\n        (suggestions.length % this.numberOfSuggestionsPerLine);\r\n      while (missingElementsOnLastLine > 0) {\r\n        suggestionsList.appendChild(document.createElement(\"li\"));\r\n        missingElementsOnLastLine -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  showSuggestions() {\r\n    this.suggestionAreaDOM.classList.add(\"displayed\");\r\n  }\r\n\r\n  hideSuggestions() {\r\n    this.suggestionAreaDOM.classList.remove(\"displayed\");\r\n  }\r\n\r\n  enterSuggestedWord(suggestion, nthWord = false) {\r\n    if (nthWord) {\r\n      suggestion = _.get(this.suggestions, `[${nthWord - 1}]`, nthWord);\r\n    }\r\n    if (typeof this.options.onSuggestedWordClicked === \"function\") {\r\n      this.options.onSuggestedWordClicked(suggestion);\r\n    } else {\r\n      this.onSuggestedWordClicked(suggestion);\r\n    }\r\n    this.setSuggestions();\r\n    this.clearInput();\r\n    this.setPinyinPreview(\"\");\r\n    if (_.includes(this.suggestionAreaDOM.classList, `expanded`)) {\r\n      this.suggestionAreaDOM.classList.remove(`expanded`);\r\n    }\r\n    const customOnChangeEvent = new Event(\"change\", { bubbles: true });\r\n    document\r\n      .querySelector(this.getSelectedInput())\r\n      .dispatchEvent(customOnChangeEvent);\r\n  }\r\n\r\n  scrollToSuggestionPage(page) {\r\n    const suggestionsList = this.suggestionAreaDOM.firstElementChild;\r\n    suggestionsList.scroll(0, (page - 1) * 36);\r\n  }\r\n\r\n  changeSuggestionsPage(changePage) {\r\n    const potentialNextPage = this.currentSuggestionPage + changePage;\r\n    if (\r\n      potentialNextPage >= 1 &&\r\n      potentialNextPage <= this.numberOfSuggestionsPages\r\n    ) {\r\n      this.currentSuggestionPage = potentialNextPage;\r\n    }\r\n    this.updateSuggestionPagesMenu();\r\n    this.scrollToSuggestionPage(this.currentSuggestionPage);\r\n  }\r\n\r\n  updateSuggestionPagesMenu() {\r\n    this.updateNumberOfSuggestionPages();\r\n    this.suggestionsPagination.innerHTML = `${this.currentSuggestionPage} / ${this.numberOfSuggestionsPages}`;\r\n    if (this.currentSuggestionPage - 1 <= 0) {\r\n      this.previousSuggestionPageBtn.classList.add(\"disabled\");\r\n    } else {\r\n      this.previousSuggestionPageBtn.classList.remove(\"disabled\");\r\n    }\r\n    if (this.currentSuggestionPage + 1 > this.numberOfSuggestionsPages) {\r\n      this.nextSuggestionPageBtn.classList.add(\"disabled\");\r\n    } else {\r\n      this.nextSuggestionPageBtn.classList.remove(\"disabled\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders rows and buttons as per options\r\n   */\r\n  render() {\r\n    /**\r\n     * Clear keyboard\r\n     */\r\n    this.clear();\r\n\r\n    /**\r\n     * Calling beforeFirstRender\r\n     */\r\n    if (!this.initialized) {\r\n      this.beforeFirstRender();\r\n    }\r\n\r\n    /**\r\n     * Calling beforeRender\r\n     */\r\n    this.beforeRender();\r\n\r\n    const layoutClass = `hg-layout-${this.options.layoutName}`;\r\n    const layout = this.options.layout || getDefaultLayout();\r\n    const useTouchEvents = this.options.useTouchEvents || false;\r\n    const useTouchEventsClass = useTouchEvents ? \"hg-touch-events\" : \"\";\r\n    const useMouseEvents = this.options.useMouseEvents || false;\r\n    const disableRowButtonContainers = this.options.disableRowButtonContainers;\r\n\r\n    /**\r\n     * Adding themeClass, layoutClass to keyboardDOM\r\n     */\r\n    this.keyboardDOM.className = this.getKeyboardClassString(\r\n      this.options.theme,\r\n      layoutClass,\r\n      this.keyboardPluginClasses,\r\n      useTouchEventsClass\r\n    );\r\n    this.suggestionAreaDOM = document.createElement(\"div\");\r\n    this.suggestionAreaDOM.appendChild(document.createElement(\"ul\"));\r\n    this.suggestionAreaDOM.className = \"suggestion-area\";\r\n    this.keyboardDOM.appendChild(this.suggestionAreaDOM);\r\n    this.previewPinyin = document.createElement(\"div\");\r\n    this.previewPinyin.className = \"preview-pinyin\";\r\n    this.keyboardDOM.appendChild(this.previewPinyin);\r\n    this.suggestionsMenu = document.createElement(\"div\");\r\n    this.suggestionsMenu.className = \"suggestions-menu\";\r\n    this.expandSuggestionsBtn = document.createElement(\"div\");\r\n    this.previousSuggestionPageBtn = document.createElement(\"div\");\r\n    this.previousSuggestionPageBtn.innerHTML = \"prev\";\r\n    this.previousSuggestionPageBtn.className = \"prev\";\r\n    this.previousSuggestionPageBtn.onclick = () => {\r\n      this.changeSuggestionsPage(-1);\r\n    };\r\n    this.nextSuggestionPageBtn = document.createElement(\"div\");\r\n    this.nextSuggestionPageBtn.innerHTML = \"next\";\r\n    this.nextSuggestionPageBtn.className = \"next\";\r\n    this.nextSuggestionPageBtn.onclick = () => {\r\n      this.changeSuggestionsPage(1);\r\n    };\r\n    this.suggestionsPagination = document.createElement(\"div\");\r\n    this.suggestionsPagination.className = \"pagination\";\r\n    this.suggestionsPagination.innerHTML = \"1 / 1\";\r\n    this.expandSuggestionsBtn.classList.add(`expand-btn`);\r\n    this.expandSuggestionsBtn.innerHTML = \"MORE\";\r\n    this.expandSuggestionsBtn.display = \"none\";\r\n    this.expandSuggestionsBtn.onclick = () => {\r\n      this.toggleMoreSuggestionsArea();\r\n    };\r\n    this.suggestionsMenu.appendChild(this.expandSuggestionsBtn);\r\n    this.suggestionsMenu.appendChild(this.previousSuggestionPageBtn);\r\n    this.suggestionsMenu.appendChild(this.nextSuggestionPageBtn);\r\n    this.suggestionsMenu.appendChild(this.suggestionsPagination);\r\n    this.suggestionAreaDOM.appendChild(this.suggestionsMenu);\r\n\r\n    /**\r\n     * Iterating through each row\r\n     */\r\n    layout[this.options.layoutName].forEach((row, rIndex) => {\r\n      const rowArray = row.split(\" \");\r\n\r\n      /**\r\n       * Creating empty row\r\n       */\r\n      let rowDOM = document.createElement(\"div\");\r\n      rowDOM.className += \"hg-row\";\r\n\r\n      /**\r\n       * Tracking container indicators in rows\r\n       */\r\n      const containerStartIndexes = [];\r\n      const containerEndIndexes = [];\r\n\r\n      /**\r\n       * Iterating through each button in row\r\n       */\r\n      rowArray.forEach((button, bIndex) => {\r\n        /**\r\n         * Check if button has a container indicator\r\n         */\r\n        const buttonHasContainerStart =\r\n          !disableRowButtonContainers &&\r\n          typeof button === \"string\" &&\r\n          button.length > 1 &&\r\n          button.indexOf(\"[\") === 0;\r\n\r\n        const buttonHasContainerEnd =\r\n          !disableRowButtonContainers &&\r\n          typeof button === \"string\" &&\r\n          button.length > 1 &&\r\n          button.indexOf(\"]\") === button.length - 1;\r\n\r\n        /**\r\n         * Save container start index, if applicable\r\n         */\r\n        if (buttonHasContainerStart) {\r\n          containerStartIndexes.push(bIndex);\r\n\r\n          /**\r\n           * Removing indicator\r\n           */\r\n          button = button.replace(/\\[/g, \"\");\r\n        }\r\n\r\n        if (buttonHasContainerEnd) {\r\n          containerEndIndexes.push(bIndex);\r\n\r\n          /**\r\n           * Removing indicator\r\n           */\r\n          button = button.replace(/\\]/g, \"\");\r\n        }\r\n\r\n        /**\r\n         * Processing button options\r\n         */\r\n        const fctBtnClass = this.utilities.getButtonClass(button);\r\n        const buttonDisplayName = this.utilities.getButtonDisplayName(\r\n          button,\r\n          this.options.display,\r\n          this.options.mergeDisplay\r\n        );\r\n\r\n        /**\r\n         * Creating button\r\n         */\r\n        const buttonType = this.options.useButtonTag ? \"button\" : \"div\";\r\n        const buttonDOM = document.createElement(buttonType);\r\n        buttonDOM.className += `hg-button ${fctBtnClass}`;\r\n\r\n        /**\r\n         * Adding buttonTheme\r\n         */\r\n        buttonDOM.classList.add(...this.getButtonThemeClasses(button));\r\n\r\n        /**\r\n         * Adding buttonAttributes\r\n         */\r\n        this.setDOMButtonAttributes(button, (attribute, value) => {\r\n          buttonDOM.setAttribute(attribute, value);\r\n        });\r\n\r\n        this.activeButtonClass = \"hg-activeButton\";\r\n\r\n        /**\r\n         * Handle button click event\r\n         */\r\n        /* istanbul ignore next */\r\n        if (\r\n          this.utilities.pointerEventsSupported() &&\r\n          !useTouchEvents &&\r\n          !useMouseEvents\r\n        ) {\r\n          /**\r\n           * Handle PointerEvents\r\n           */\r\n          buttonDOM.onpointerdown = e => {\r\n            this.handleButtonClicked(button);\r\n            this.handleButtonMouseDown(button, e);\r\n          };\r\n          buttonDOM.onpointerup = e => {\r\n            this.handleButtonMouseUp(button, e);\r\n          };\r\n          buttonDOM.onpointercancel = e => {\r\n            this.handleButtonMouseUp(button, e);\r\n          };\r\n        } else {\r\n          /**\r\n           * Fallback for browsers not supporting PointerEvents\r\n           */\r\n          if (useTouchEvents) {\r\n            /**\r\n             * Handle touch events\r\n             */\r\n            buttonDOM.ontouchstart = e => {\r\n              this.handleButtonClicked(button);\r\n              this.handleButtonMouseDown(button, e);\r\n            };\r\n            buttonDOM.ontouchend = e => {\r\n              this.handleButtonMouseUp(button, e);\r\n            };\r\n            buttonDOM.ontouchcancel = e => {\r\n              this.handleButtonMouseUp(button, e);\r\n            };\r\n          } else {\r\n            /**\r\n             * Handle mouse events\r\n             */\r\n            buttonDOM.onclick = () => {\r\n              this.isMouseHold = false;\r\n              this.handleButtonClicked(button);\r\n            };\r\n            buttonDOM.onmousedown = e => {\r\n              this.handleButtonMouseDown(button, e);\r\n            };\r\n            buttonDOM.onmouseup = e => {\r\n              this.handleButtonMouseUp(button, e);\r\n            };\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Adding identifier\r\n         */\r\n        buttonDOM.setAttribute(\"data-skBtn\", button);\r\n\r\n        /**\r\n         * Adding unique id\r\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\r\n         */\r\n        const buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\r\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\r\n\r\n        /**\r\n         * Adding button label to button\r\n         */\r\n        const buttonSpanDOM = document.createElement(\"span\");\r\n        buttonSpanDOM.innerHTML = buttonDisplayName;\r\n        buttonDOM.appendChild(buttonSpanDOM);\r\n\r\n        /**\r\n         * Adding to buttonElements\r\n         */\r\n        if (!this.buttonElements[button]) this.buttonElements[button] = [];\r\n\r\n        this.buttonElements[button].push(buttonDOM);\r\n\r\n        /**\r\n         * Appending button to row\r\n         */\r\n        rowDOM.appendChild(buttonDOM);\r\n      });\r\n\r\n      /**\r\n       * Parse containers in row\r\n       */\r\n      rowDOM = this.parseRowDOMContainers(\r\n        rowDOM,\r\n        rIndex,\r\n        containerStartIndexes,\r\n        containerEndIndexes\r\n      );\r\n\r\n      /**\r\n       * Appending row to keyboard\r\n       */\r\n      this.keyboardDOM.appendChild(rowDOM);\r\n    });\r\n\r\n    /**\r\n     * Calling onRender\r\n     */\r\n    this.onRender();\r\n\r\n    if (!this.initialized) {\r\n      /**\r\n       * Ensures that onInit and beforeFirstRender are only called once per instantiation\r\n       */\r\n      this.initialized = true;\r\n\r\n      /**\r\n       * Handling parent events\r\n       */\r\n      /* istanbul ignore next */\r\n      if (\r\n        this.utilities.pointerEventsSupported() &&\r\n        !useTouchEvents &&\r\n        !useMouseEvents\r\n      ) {\r\n        document.onpointerup = () => this.handleButtonMouseUp();\r\n        this.keyboardDOM.onpointerdown = e =>\r\n          this.handleKeyboardContainerMouseDown(e);\r\n      } else if (useTouchEvents) {\r\n        /**\r\n         * Handling ontouchend, ontouchcancel\r\n         */\r\n        document.ontouchend = () => this.handleButtonMouseUp();\r\n        document.ontouchcancel = () => this.handleButtonMouseUp();\r\n\r\n        this.keyboardDOM.ontouchstart = e =>\r\n          this.handleKeyboardContainerMouseDown(e);\r\n      } else if (!useTouchEvents) {\r\n        /**\r\n         * Handling mouseup\r\n         */\r\n        document.onmouseup = () => this.handleButtonMouseUp();\r\n        this.keyboardDOM.onmousedown = e =>\r\n          this.handleKeyboardContainerMouseDown(e);\r\n      }\r\n\r\n      /**\r\n       * Calling onInit\r\n       */\r\n      this.onInit();\r\n    }\r\n  }\r\n}\r\n\r\nexport default SimpleKeyboard;\r\n","export const getDefaultLayout = () => {\r\n  return {\r\n    default: [\r\n      \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\r\n      \"{tab} q w e r t y u i o p [ ] \\\\\",\r\n      \"{lock} a s d f g h j k l ; ' {enter}\",\r\n      \"{shift} z x c v b n m , . / {shift}\",\r\n      \".com @ {space}\"\r\n    ],\r\n    shift: [\r\n      \"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\r\n      \"{tab} Q W E R T Y U I O P { } |\",\r\n      '{lock} A S D F G H J K L : \" {enter}',\r\n      \"{shift} Z X C V B N M < > ? {shift}\",\r\n      \".com @ {space}\"\r\n    ]\r\n  };\r\n};\r\n","import SimpleKeyboard from \"./components/Keyboard\";\r\nexport default SimpleKeyboard;\r\n"],"sourceRoot":""}